[
  {
    "name": "combat",
    "modules": [
      {
        "name": "AnchorAura",
        "settings": [
          {
            "variableName": "targetRange",
            "displayName": "target-range",
            "description": "The radius in which players get targeted.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "targetPriority",
            "displayName": "target-priority",
            "description": "How to select the player to target.",
            "defaultValue": "SortPriority.LowestHealth",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotationMode",
            "displayName": "rotation-mode",
            "description": "The mode to rotate you server-side.",
            "defaultValue": "RotationMode.Both",
            "type": "RotationMode",
            "builderType": "Enum",
            "options": [
              "Place",
              "Break",
              "Both",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxDamage",
            "displayName": "max-self-damage",
            "description": "The maximum self-damage allowed.",
            "defaultValue": "8",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minHealth",
            "displayName": "min-health",
            "description": "The minimum health you have to be for Anchor Aura to work.",
            "defaultValue": "15",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "place",
            "displayName": "place",
            "description": "Allows Anchor Aura to place anchors.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeDelay",
            "displayName": "place-delay",
            "description": "The tick delay between placing anchors.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": "10",
            "step": null
          },
          {
            "variableName": "placeMode",
            "displayName": "place-mode",
            "description": "The way anchors are allowed to be placed near you.",
            "defaultValue": "Safety.Safe",
            "type": "Safety",
            "builderType": "Enum",
            "options": [
              "Safe",
              "Suicide"
            ],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeRange",
            "displayName": "place-range",
            "description": "The radius in which anchors are placed in.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "placePositions",
            "displayName": "placement-positions",
            "description": "Where the Anchors will be placed on the entity.",
            "defaultValue": "PlaceMode.AboveAndBelow",
            "type": "PlaceMode",
            "builderType": "Enum",
            "options": [
              "Above",
              "Around",
              "AboveAndBelow",
              "All"
            ],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakDelay",
            "displayName": "break-delay",
            "description": "The tick delay between breaking anchors.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": "10",
            "step": null
          },
          {
            "variableName": "breakMode",
            "displayName": "break-mode",
            "description": "The way anchors are allowed to be broken near you.",
            "defaultValue": "Safety.Safe",
            "type": "Safety",
            "builderType": "Enum",
            "options": [
              "Safe",
              "Suicide"
            ],
            "groupName": "Break",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakRange",
            "displayName": "break-range",
            "description": "The radius in which anchors are broken in.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "pauseOnEat",
            "displayName": "pause-on-eat",
            "description": "Pauses while eating.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnDrink",
            "displayName": "pause-on-drink",
            "description": "Pauses while drinking potions.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnMine",
            "displayName": "pause-on-mine",
            "description": "Pauses while mining blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlace",
            "displayName": "render-place",
            "description": "Renders the block where it is placing an anchor.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeSideColor",
            "displayName": "place-side-color",
            "description": "The side color for positions to be placed.",
            "defaultValue": "new SettingColor(255, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeLineColor",
            "displayName": "place-line-color",
            "description": "The line color for positions to be placed.",
            "defaultValue": "new SettingColor(255, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderBreak",
            "displayName": "render-break",
            "description": "Renders the block where it is breaking an anchor.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakSideColor",
            "displayName": "break-side-color",
            "description": "The side color for anchors to be broken.",
            "defaultValue": "new SettingColor(255, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakLineColor",
            "displayName": "break-line-color",
            "description": "The line color for anchors to be broken.",
            "defaultValue": "new SettingColor(255, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AntiAnchor",
        "settings": [
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Makes you rotate when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Swings your hand when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AntiAnvil",
        "settings": [
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Swings your hand client-side when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Makes you rotate when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AntiBed",
        "settings": [
          {
            "variableName": "placeStringTop",
            "displayName": "place-string-top",
            "description": "Places string above you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeStringMiddle",
            "displayName": "place-string-middle",
            "description": "Places string in your upper hitbox.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeStringBottom",
            "displayName": "place-string-bottom",
            "description": "Places string at your feet.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyInHole",
            "displayName": "only-in-hole",
            "description": "Only functions when you are standing in a hole.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ArrowDodge",
        "settings": [
          {
            "variableName": "moveType",
            "displayName": "move-type",
            "description": "The way you are moved by this module.",
            "defaultValue": "MoveType.Velocity",
            "type": "MoveType",
            "builderType": "Enum",
            "options": [
              "Velocity",
              "Packet"
            ],
            "groupName": "Movement",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "moveSpeed",
            "displayName": "move-speed",
            "description": "How fast should you be when dodging arrow.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Movement",
            "min": "0.01",
            "max": null,
            "step": null
          },
          {
            "variableName": "distanceCheck",
            "displayName": "distance-check",
            "description": "How far should an arrow be from the player to be considered not hitting.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Movement",
            "min": "0.01",
            "max": null,
            "step": null
          },
          {
            "variableName": "accurate",
            "displayName": "accurate",
            "description": "Whether or not to calculate more accurate.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "groundCheck",
            "displayName": "ground-check",
            "description": "Tries to prevent you from falling to your death.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "allProjectiles",
            "displayName": "all-projectiles",
            "description": "Dodge all projectiles, not only arrows.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreOwn",
            "displayName": "ignore-own",
            "description": "Ignore your own projectiles.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "simulationSteps",
            "displayName": "simulation-steps",
            "description": "How many steps to simulate projectiles. Zero for no limit.",
            "defaultValue": "500",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "5000",
            "step": null
          }
        ]
      },
      {
        "name": "AutoAnvil",
        "settings": [
          {
            "variableName": "range",
            "displayName": "target-range",
            "description": "The radius in which players get targeted.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "target-priority",
            "description": "How to select the player to target.",
            "defaultValue": "SortPriority.LowestHealth",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "height",
            "displayName": "height",
            "description": "The height to place anvils at.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The delay in between anvil placements.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "50",
            "step": null
          },
          {
            "variableName": "placeButton",
            "displayName": "place-at-feet",
            "description": "Automatically places a button or pressure plate at the targets feet to break the anvils.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "multiPlace",
            "displayName": "multi-place",
            "description": "Places multiple anvils at once..",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnBreak",
            "displayName": "toggle-on-break",
            "description": "Toggles when the target's helmet slot is empty.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically rotates towards the position anvils/pressure plates/buttons are placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoArmor",
        "settings": [
          {
            "variableName": "preferredProtection",
            "displayName": "preferred-protection",
            "description": "Which type of protection to prefer.",
            "defaultValue": "Protection.Protection",
            "type": "Protection",
            "builderType": "Enum",
            "options": [
              "Protection",
              "BlastProtection",
              "FireProtection",
              "ProjectileProtection"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "swap-delay",
            "description": "The delay between equipping armor pieces.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "blastLeggings",
            "displayName": "blast-prot-leggings",
            "description": "Uses blast protection for leggings regardless of preferred protection.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Takes off armor if it is about to break.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreElytra",
            "displayName": "ignore-elytra",
            "description": "Will not replace your elytra if you have it equipped.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoCity",
        "settings": [
          {
            "variableName": "targetRange",
            "displayName": "target-range",
            "description": "The radius in which players get targeted.",
            "defaultValue": "5.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "7",
            "step": null
          },
          {
            "variableName": "breakRange",
            "displayName": "break-range",
            "description": "How close a block must be to you to be considered.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "switchMode",
            "displayName": "switch-mode",
            "description": "How to switch to a pickaxe.",
            "defaultValue": "SwitchMode.Normal",
            "type": "SwitchMode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Silent"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "support",
            "displayName": "support",
            "description": "If there is no block below a city block it will place one before mining.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeRange",
            "displayName": "place-range",
            "description": "How far away to try and place a block.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically rotates you towards the city block.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "chatInfo",
            "displayName": "chat-info",
            "description": "Whether the module should send messages in chat.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingHand",
            "displayName": "swing-hand",
            "description": "Whether to render your hand swinging.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderBlock",
            "displayName": "render-block",
            "description": "Whether to render the block being broken.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the rendering.",
            "defaultValue": "new SettingColor(225, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the rendering.",
            "defaultValue": "new SettingColor(225, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoEXP",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which items to repair.",
            "defaultValue": "Mode.Both",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Armor",
              "Hands",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "replenish",
            "displayName": "replenish",
            "description": "Automatically replenishes exp into a selected hotbar slot.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "slot",
            "displayName": "exp-slot",
            "description": "The slot to replenish exp into.",
            "defaultValue": "6",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "9",
            "step": null
          },
          {
            "variableName": "minThreshold",
            "displayName": "min-threshold",
            "description": "The minimum durability percentage that an item needs to fall to, to be repaired.",
            "defaultValue": "30",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "maxThreshold",
            "displayName": "max-threshold",
            "description": "The maximum durability percentage to repair items to.",
            "defaultValue": "80",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "100",
            "step": null
          }
        ]
      },
      {
        "name": "AutoTotem",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Determines when to hold a totem, strict will always hold.",
            "defaultValue": "Mode.Smart",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Smart",
              "Strict"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The ticks between slot movements.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "health",
            "displayName": "health",
            "description": "The health to hold a totem at.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "elytra",
            "displayName": "elytra",
            "description": "Will always hold a totem when flying with elytra.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fall",
            "displayName": "fall",
            "description": "Will hold a totem when fall damage could kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "explosion",
            "displayName": "explosion",
            "description": "Will hold a totem when explosion damage could kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoTrap",
        "settings": [
          {
            "variableName": "range",
            "displayName": "target-range",
            "description": "The range players can be targeted.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "target-priority",
            "description": "How to select the player to target.",
            "defaultValue": "SortPriority.LowestHealth",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "place-delay",
            "description": "How many ticks between block placements.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "topPlacement",
            "displayName": "top-blocks",
            "description": "Which blocks to place on the top half of the target.",
            "defaultValue": "TopMode.Full",
            "type": "TopMode",
            "builderType": "Enum",
            "options": [
              "Full",
              "Top",
              "Face",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bottomPlacement",
            "displayName": "bottom-blocks",
            "description": "Which blocks to place on the bottom half of the target.",
            "defaultValue": "BottomMode.Platform",
            "type": "BottomMode",
            "builderType": "Enum",
            "options": [
              "Single",
              "Platform",
              "Full",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "selfToggle",
            "displayName": "self-toggle",
            "description": "Turns off after placing all blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates towards blocks when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders an overlay where blocks will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nextSideColor",
            "displayName": "next-side-color",
            "description": "The side color of the next block to be placed.",
            "defaultValue": "new SettingColor(227, 196, 245, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nextLineColor",
            "displayName": "next-line-color",
            "description": "The line color of the next block to be placed.",
            "defaultValue": "new SettingColor(227, 196, 245",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoWeapon",
        "settings": [
          {
            "variableName": "weapon",
            "displayName": "weapon",
            "description": "What type of weapon to use.",
            "defaultValue": "Weapon.Sword",
            "type": "Weapon",
            "builderType": "Enum",
            "options": [
              "Sword",
              "Axe"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "threshold",
            "displayName": "threshold",
            "description": "If the non-preferred weapon produces this much damage this will favor it over your preferred weapon.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Prevents you from breaking your weapon.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoWeb",
        "settings": [
          {
            "variableName": "range",
            "displayName": "target-range",
            "description": "The maximum distance to target players.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "target-priority",
            "description": "How to filter targets within range.",
            "defaultValue": "SortPriority.LowestDistance",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "doubles",
            "displayName": "doubles",
            "description": "Places webs in the target's upper hitbox as well as the lower hitbox.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates towards the webs when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BedAura",
        "settings": [
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The delay between placing beds in ticks.",
            "defaultValue": "9",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "strictDirection",
            "displayName": "strict-direction",
            "description": "Only places beds in the direction you are facing.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "targetRange",
            "displayName": "target-range",
            "description": "The range at which players can be targeted.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Targeting",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "target-priority",
            "description": "How to filter targets within range.",
            "defaultValue": "SortPriority.LowestHealth",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minDamage",
            "displayName": "min-damage",
            "description": "The minimum damage to inflict on your target.",
            "defaultValue": "7",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Targeting",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "maxSelfDamage",
            "displayName": "max-self-damage",
            "description": "The maximum damage to inflict on yourself.",
            "defaultValue": "7",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Targeting",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "antiSuicide",
            "displayName": "anti-suicide",
            "description": "Will not place and break beds if they will kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoMove",
            "displayName": "auto-move",
            "description": "Moves beds into a selected hotbar slot.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Inventory",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoMoveSlot",
            "displayName": "auto-move-slot",
            "description": "The slot auto move moves beds to.",
            "defaultValue": "9",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Inventory",
            "min": "1",
            "max": "9",
            "step": null
          },
          {
            "variableName": "autoSwitch",
            "displayName": "auto-switch",
            "description": "Switches to and from beds automatically.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Inventory",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnEat",
            "displayName": "pause-on-eat",
            "description": "Pauses while eating.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnDrink",
            "displayName": "pause-on-drink",
            "description": "Pauses while drinking.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnMine",
            "displayName": "pause-on-mine",
            "description": "Pauses while mining.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Whether to swing hand client-side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders the block where it is placing a bed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color for positions to be placed.",
            "defaultValue": "new SettingColor(15, 255, 211,75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color for positions to be placed.",
            "defaultValue": "new SettingColor(15, 255, 211",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BowAimbot",
        "settings": [
          {
            "variableName": "range",
            "displayName": "range",
            "description": "The maximum range the entity can be to aim at it.",
            "defaultValue": "20",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "100",
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "priority",
            "description": "What type of entities to target.",
            "defaultValue": "SortPriority.LowestHealth",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "babies",
            "displayName": "babies",
            "description": "Whether or not to attack baby variants of the entity.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nametagged",
            "displayName": "nametagged",
            "description": "Whether or not to attack mobs with a name tag.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnCombat",
            "displayName": "pause-on-combat",
            "description": "Freezes Baritone temporarily until you released the bow.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BowSpam",
        "settings": [
          {
            "variableName": "charge",
            "displayName": "charge",
            "description": "How long to charge the bow before releasing in ticks.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "5",
            "max": "20",
            "step": null
          },
          {
            "variableName": "onlyWhenHoldingRightClick",
            "displayName": "when-holding-right-click",
            "description": "Works only when holding right click.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Burrow",
        "settings": [
          {
            "variableName": "block",
            "displayName": "block-to-use",
            "description": "The block to use for Burrow.",
            "defaultValue": "Block.EChest",
            "type": "Block",
            "builderType": "Enum",
            "options": [
              "EChest",
              "Obsidian",
              "Anvil",
              "Held"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "instant",
            "displayName": "instant",
            "description": "Jumps with packets rather than vanilla jump.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "automatic",
            "displayName": "automatic",
            "description": "Automatically burrows on activate rather than waiting for jump.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "triggerHeight",
            "displayName": "trigger-height",
            "description": "How high you have to jump before a rubberband is triggered.",
            "defaultValue": "1.12",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.01",
            "max": "1.4",
            "step": null
          },
          {
            "variableName": "rubberbandHeight",
            "displayName": "rubberband-height",
            "description": "How far to attempt to cause rubberband.",
            "defaultValue": "12",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "30",
            "step": null
          },
          {
            "variableName": "timer",
            "displayName": "timer",
            "description": "Timer override.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.01",
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyInHole",
            "displayName": "only-in-holes",
            "description": "Stops you from burrowing when not in a hole.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "center",
            "displayName": "center",
            "description": "Centers you to the middle of the block before burrowing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Faces the block you place server-side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Criticals",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The mode on how Criticals will function.",
            "defaultValue": "Mode.Packet",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "None",
              "Packet",
              "Bypass",
              "Jump",
              "MiniJump"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ka",
            "displayName": "only-killaura",
            "description": "Only performs crits when using killaura.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mace",
            "displayName": "smash-attack",
            "description": "Will always perform smash attacks when using a mace.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Mace",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "extraHeight",
            "displayName": "additional-height",
            "description": "The amount of additional height to spoof. More height means more damage.",
            "defaultValue": "0.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Mace",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "CrystalAura",
        "settings": [
          {
            "variableName": "targetRange",
            "displayName": "target-range",
            "description": "Range in which to target players.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "16",
            "step": null
          },
          {
            "variableName": "predictMovement",
            "displayName": "predict-movement",
            "description": "Predicts target movement.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minDamage",
            "displayName": "min-damage",
            "description": "Minimum damage the crystal needs to deal to your target.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "maxDamage",
            "displayName": "max-damage",
            "description": "Maximum damage crystals can deal to yourself.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "antiSuicide",
            "displayName": "anti-suicide",
            "description": "Will not place and break crystals if they will kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreNakeds",
            "displayName": "ignore-nakeds",
            "description": "Ignore players with no items.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates server-side towards the crystals being hit/placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "yawStepMode",
            "displayName": "yaw-steps-mode",
            "description": "When to run the yaw steps check.",
            "defaultValue": "YawStepMode.Break",
            "type": "YawStepMode",
            "builderType": "Enum",
            "options": [
              "Break",
              "All"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "yawSteps",
            "displayName": "yaw-steps",
            "description": "Maximum number of degrees its allowed to rotate in one tick.",
            "defaultValue": "180",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "180",
            "step": null
          },
          {
            "variableName": "autoSwitch",
            "displayName": "auto-switch",
            "description": "Switches to crystals in your hotbar once a target is found.",
            "defaultValue": "AutoSwitchMode.Normal",
            "type": "AutoSwitchMode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Silent",
              "None"
            ],
            "groupName": "Switch",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "switchDelay",
            "displayName": "switch-delay",
            "description": "The delay in ticks to wait to break a crystal after switching hotbar slot.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Switch",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "noGapSwitch",
            "displayName": "no-gap-switch",
            "description": "Won't auto switch if you're holding a gapple.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Switch",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBowSwitch",
            "displayName": "no-bow-switch",
            "description": "Won't auto switch if you're holding a bow.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Switch",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiWeakness",
            "displayName": "anti-weakness",
            "description": "Switches to tools with so you can break crystals with the weakness effect.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Switch",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "doPlace",
            "displayName": "place",
            "description": "If the CA should place crystals.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeDelay",
            "displayName": "place-delay",
            "description": "The delay in ticks to wait to place a crystal after it's exploded.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "placeRange",
            "displayName": "place-range",
            "description": "Range in which to place crystals.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "placeWallsRange",
            "displayName": "walls-range",
            "description": "Range in which to place crystals when behind blocks.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "placement112",
            "displayName": "1.12-placement",
            "description": "Uses 1.12 crystal placement.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "support",
            "displayName": "support",
            "description": "Places a support block in air if no other position have been found.",
            "defaultValue": "SupportMode.Disabled",
            "type": "SupportMode",
            "builderType": "Enum",
            "options": [
              "Disabled",
              "Accurate",
              "Fast"
            ],
            "groupName": "Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "supportDelay",
            "displayName": "support-delay",
            "description": "Delay in ticks after placing support block.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Place",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "facePlace",
            "displayName": "face-place",
            "description": "Will face-place when target is below a certain health or armor durability threshold.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Face Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "facePlaceHealth",
            "displayName": "face-place-health",
            "description": "The health the target has to be at to start face placing.",
            "defaultValue": "8",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Face Place",
            "min": "1",
            "max": "36",
            "step": null
          },
          {
            "variableName": "facePlaceDurability",
            "displayName": "face-place-durability",
            "description": "The durability threshold percentage to be able to face-place.",
            "defaultValue": "2",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Face Place",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "facePlaceArmor",
            "displayName": "face-place-missing-armor",
            "description": "Automatically starts face placing when a target misses a piece of armor.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Face Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "forceFacePlace",
            "displayName": "force-face-place",
            "description": "Starts face place when this button is pressed.",
            "defaultValue": "Keybind.none(",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Face Place",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "doBreak",
            "displayName": "break",
            "description": "If the CA should break crystals.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Break",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakDelay",
            "displayName": "break-delay",
            "description": "The delay in ticks to wait to break a crystal after it's placed.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "smartDelay",
            "displayName": "smart-delay",
            "description": "Only breaks crystals when the target can receive damage.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Break",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakRange",
            "displayName": "break-range",
            "description": "Range in which to break crystals.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "breakWallsRange",
            "displayName": "walls-range",
            "description": "Range in which to break crystals when behind blocks.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "onlyBreakOwn",
            "displayName": "only-own",
            "description": "Only breaks own crystals.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Break",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakAttempts",
            "displayName": "break-attempts",
            "description": "How many times to hit a crystal before stopping to target it.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Break",
            "min": null,
            "max": "5",
            "step": null
          },
          {
            "variableName": "ticksExisted",
            "displayName": "ticks-existed",
            "description": "Amount of ticks a crystal needs to have lived for it to be attacked by CrystalAura.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Break",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "attackFrequency",
            "displayName": "attack-frequency",
            "description": "Maximum hits to do per second.",
            "defaultValue": "25",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Break",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "fastBreak",
            "displayName": "fast-break",
            "description": "Ignores break delay and tries to break the crystal as soon as it's spawned in the world.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Break",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnUse",
            "displayName": "pause-on-use",
            "description": "Which processes should be paused while using an item.",
            "defaultValue": "PauseMode.Place",
            "type": "PauseMode",
            "builderType": "Enum",
            "options": [
              "Both",
              "Place",
              "Break",
              "None"
            ],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnMine",
            "displayName": "pause-on-mine",
            "description": "Which processes should be paused while mining a block.",
            "defaultValue": "PauseMode.None",
            "type": "PauseMode",
            "builderType": "Enum",
            "options": [
              "Both",
              "Place",
              "Break",
              "None"
            ],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnLag",
            "displayName": "pause-on-lag",
            "description": "Whether to pause if the server is not responding.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pause",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseHealth",
            "displayName": "pause-health",
            "description": "Pauses when you go below a certain health.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Pause",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "swingMode",
            "displayName": "swing-mode",
            "description": "How to swing when placing.",
            "defaultValue": "SwingMode.Both",
            "type": "SwingMode",
            "builderType": "Enum",
            "options": [
              "Both",
              "Packet",
              "Client",
              "None"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderMode",
            "displayName": "render-mode",
            "description": "The mode to render in.",
            "defaultValue": "RenderMode.Normal",
            "type": "RenderMode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Smooth",
              "Fading",
              "Gradient",
              "None"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlace",
            "displayName": "render-place",
            "description": "Renders a block overlay over the block the crystals are being placed on.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeRenderTime",
            "displayName": "place-time",
            "description": "How long to render placements.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "renderBreak",
            "displayName": "render-break",
            "description": "Renders a block overlay over the block the crystals are broken on.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakRenderTime",
            "displayName": "break-time",
            "description": "How long to render breaking for.",
            "defaultValue": "13",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "smoothness",
            "displayName": "smoothness",
            "description": "How smoothly the render should move around.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "height",
            "displayName": "height",
            "description": "How tall the gradient should be.",
            "defaultValue": "0.7",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "renderTime",
            "displayName": "render-time",
            "description": "How long to render placements.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the block overlay.",
            "defaultValue": "new SettingColor(255, 255, 255, 45",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the block overlay.",
            "defaultValue": "new SettingColor(255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderDamageText",
            "displayName": "damage",
            "description": "Renders crystal damage text in the block overlay.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "damageColor",
            "displayName": "damage-color",
            "description": "The color of the damage text.",
            "defaultValue": "new SettingColor(255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "damageTextScale",
            "displayName": "damage-scale",
            "description": "How big the damage text should be.",
            "defaultValue": "1.25",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Render",
            "min": "1",
            "max": "4",
            "step": null
          }
        ]
      },
      {
        "name": "Hitboxes",
        "settings": [
          {
            "variableName": "value",
            "displayName": "expand",
            "description": "How much to expand the hitbox of the entity.",
            "defaultValue": "0.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreFriends",
            "displayName": "ignore-friends",
            "description": "Doesn't expand the hitboxes of friends.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnWeapon",
            "displayName": "only-on-weapon",
            "description": "Only modifies hitbox when holding a weapon in hand.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "HoleFiller",
        "settings": [
          {
            "variableName": "searchRadius",
            "displayName": "search-radius",
            "description": "Horizontal radius in which to search for holes.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "placeRange",
            "displayName": "place-range",
            "description": "How far away from the player you can place a block.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "doubles",
            "displayName": "doubles",
            "description": "Fills double holes.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically rotates towards the holes being filled.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placeDelay",
            "displayName": "place-delay",
            "description": "The ticks delay between placement.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "blocksPerTick",
            "displayName": "blocks-per-tick",
            "description": "How many blocks to place in one tick.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "smart",
            "displayName": "smart",
            "description": "Take more factors into account before filling a hole.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Smart",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "forceFill",
            "displayName": "force-fill",
            "description": "Fills all holes around you regardless of target checks.",
            "defaultValue": "Keybind.none(",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Smart",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "predict",
            "displayName": "predict",
            "description": "Predict target movement to account for ping.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Smart",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreSafe",
            "displayName": "ignore-safe",
            "description": "Ignore players in safe holes.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Smart",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyMoving",
            "displayName": "only-moving",
            "description": "Ignore players if they're standing still.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Smart",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "targetRange",
            "displayName": "target-range",
            "description": "How far away to target players.",
            "defaultValue": "7",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Smart",
            "min": "0",
            "max": "10",
            "step": null
          },
          {
            "variableName": "feetRange",
            "displayName": "feet-range",
            "description": "How far from a hole a player's feet must be to fill it.",
            "defaultValue": "1.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Smart",
            "min": "0",
            "max": "4",
            "step": null
          },
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Swing the player's hand when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders an overlay where blocks will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nextSideColor",
            "displayName": "next-side-color",
            "description": "The side color of the next block to be placed.",
            "defaultValue": "new SettingColor(227, 196, 245, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nextLineColor",
            "displayName": "next-line-color",
            "description": "The line color of the next block to be placed.",
            "defaultValue": "new SettingColor(227, 196, 245",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "KillAura",
        "settings": [
          {
            "variableName": "weapon",
            "displayName": "weapon",
            "description": "Only attacks an entity when a specified weapon is in your hand.",
            "defaultValue": "Weapon.All",
            "type": "Weapon",
            "builderType": "Enum",
            "options": [
              "Sword",
              "Axe",
              "Mace",
              "Trident",
              "All",
              "Any"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotation",
            "displayName": "rotate",
            "description": "Determines when you should rotate towards the target.",
            "defaultValue": "RotationMode.Always",
            "type": "RotationMode",
            "builderType": "Enum",
            "options": [
              "Always",
              "OnHit",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoSwitch",
            "displayName": "auto-switch",
            "description": "Switches to your selected weapon when attacking the target.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnClick",
            "displayName": "only-on-click",
            "description": "Only attacks when holding left click.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnLook",
            "displayName": "only-on-look",
            "description": "Only attacks when looking at an entity.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnCombat",
            "displayName": "pause-baritone",
            "description": "Freezes Baritone temporarily until you are finished attacking the entity.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shieldMode",
            "displayName": "shield-mode",
            "description": "Will try and use an axe to break target shields.",
            "defaultValue": "ShieldMode.Break",
            "type": "ShieldMode",
            "builderType": "Enum",
            "options": [
              "Ignore",
              "Break",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "priority",
            "description": "How to filter targets within range.",
            "defaultValue": "SortPriority.ClosestAngle",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxTargets",
            "displayName": "max-targets",
            "description": "How many entities to target at once.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Targeting",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "The maximum range the entity can be to attack it.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Targeting",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "wallsRange",
            "displayName": "walls-range",
            "description": "The maximum range the entity can be attacked through walls.",
            "defaultValue": "3.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Targeting",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "mobAgeFilter",
            "displayName": "mob-age-filter",
            "description": "Determines the age of the mobs to target (baby, adult, or both).",
            "defaultValue": "EntityAge.Adult",
            "type": "EntityAge",
            "builderType": "Enum",
            "options": [
              "Baby",
              "Adult",
              "Both"
            ],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreNamed",
            "displayName": "ignore-named",
            "description": "Whether or not to attack mobs with a name.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignorePassive",
            "displayName": "ignore-passive",
            "description": "Will only attack sometimes passive mobs if they are targeting you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreTamed",
            "displayName": "ignore-tamed",
            "description": "Will avoid attacking mobs you tamed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Targeting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnLag",
            "displayName": "pause-on-lag",
            "description": "Pauses if the server is lagging.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Timing",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnUse",
            "displayName": "pause-on-use",
            "description": "Does not attack while using an item.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Timing",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnCA",
            "displayName": "pause-on-CA",
            "description": "Does not attack while CA is placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Timing",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tpsSync",
            "displayName": "TPS-sync",
            "description": "Tries to sync attack delay with the server's TPS.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Timing",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customDelay",
            "displayName": "custom-delay",
            "description": "Use a custom delay instead of the vanilla cooldown.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Timing",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hitDelay",
            "displayName": "hit-delay",
            "description": "How fast you hit the entity in ticks.",
            "defaultValue": "11",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Timing",
            "min": "0",
            "max": "60",
            "step": null
          },
          {
            "variableName": "switchDelay",
            "displayName": "switch-delay",
            "description": "How many ticks to wait before hitting an entity after switching hotbar slots.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Timing",
            "min": "0",
            "max": "10",
            "step": null
          }
        ]
      },
      {
        "name": "Offhand",
        "settings": [
          {
            "variableName": "delayTicks",
            "displayName": "item-switch-delay",
            "description": "The delay in ticks between slot movements.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Combat",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "preferreditem",
            "displayName": "item",
            "description": "Which item to hold in your offhand.",
            "defaultValue": "Item.Crystal",
            "type": "Item",
            "builderType": "Enum",
            "options": [
              "// Items the module could put on your offhand\n        EGap",
              "Gap",
              "Crystal",
              "Totem",
              "Shield",
              "Potion"
            ],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hotbar",
            "displayName": "hotbar",
            "description": "Whether to use items from your hotbar.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rightgapple",
            "displayName": "right-gapple",
            "description": "Will switch to a gapple when holding right click.(DO NOT USE WITH POTION ON)",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "SwordGap",
            "displayName": "sword-gapple",
            "description": "Will switch to a gapple when holding a sword and right click.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "alwaysSwordGap",
            "displayName": "always-gap-on-sword",
            "description": "Holds an Enchanted Golden Apple when you are holding a sword.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "alwaysPot",
            "displayName": "always-pot-on-sword",
            "description": "Will switch to a potion when holding a sword",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "potionClick",
            "displayName": "sword-pot",
            "description": "Will switch to a potion when holding a sword and right click.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Combat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minHealth",
            "displayName": "min-health",
            "description": "Will hold a totem when below this amount of health.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Totem",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "elytra",
            "displayName": "elytra",
            "description": "Will always hold a totem while flying with an elytra.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "falling",
            "displayName": "falling",
            "description": "Will hold a totem if fall damage could kill you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "explosion",
            "displayName": "explosion",
            "description": "Will hold a totem when explosion damage could kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Quiver",
        "settings": [
          {
            "variableName": "cooldown",
            "displayName": "cooldown",
            "description": "How many ticks between shooting effects (19 minimum for NCP).",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "40",
            "step": null
          },
          {
            "variableName": "checkEffects",
            "displayName": "check-effects",
            "description": "Won't shoot you with effects you already have.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "silentBow",
            "displayName": "silent-bow",
            "description": "Takes a bow from your inventory to quiver.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "chatInfo",
            "displayName": "chat-info",
            "description": "Sends info about quiver checks in chat.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyInHoles",
            "displayName": "only-in-holes",
            "description": "Only quiver when you're in a hole.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Safety",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnGround",
            "displayName": "only-on-ground",
            "description": "Only quiver when you're on the ground.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Safety",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minHealth",
            "displayName": "min-health",
            "description": "How much health you must have to quiver.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Safety",
            "min": "0",
            "max": "36",
            "step": null
          }
        ]
      },
      {
        "name": "SelfAnvil",
        "settings": []
      },
      {
        "name": "SelfTrap",
        "settings": [
          {
            "variableName": "topPlacement",
            "displayName": "top-mode",
            "description": "Which positions to place on your top half.",
            "defaultValue": "TopMode.Top",
            "type": "TopMode",
            "builderType": "Enum",
            "options": [
              "AntiFacePlace",
              "Full",
              "Top",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bottomPlacement",
            "displayName": "bottom-mode",
            "description": "Which positions to place on your bottom half.",
            "defaultValue": "BottomMode.None",
            "type": "BottomMode",
            "builderType": "Enum",
            "options": [
              "Single",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delaySetting",
            "displayName": "place-delay",
            "description": "How many ticks between block placements.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "center",
            "displayName": "center",
            "description": "Centers you on the block you are standing on before placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "turnOff",
            "displayName": "turn-off",
            "description": "Turns off after placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Sends rotation packets to the server when placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders a block overlay where the blocks will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "SelfWeb",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The mode to use for selfweb.",
            "defaultValue": "Mode.Normal",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Smart"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "How far away the player has to be from you to place webs. Requires Mode to Smart.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "doubles",
            "displayName": "double-place",
            "description": "Places webs in your upper hitbox as well.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "turnOff",
            "displayName": "auto-toggle",
            "description": "Toggles off after placing the webs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Forces you to rotate downwards when placing webs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Surround",
        "settings": [
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay, in ticks, between block placements.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "center",
            "displayName": "center",
            "description": "Teleports you to the center of the block.",
            "defaultValue": "Center.Incomplete",
            "type": "Center",
            "builderType": "Enum",
            "options": [
              "Never",
              "OnActivate",
              "Incomplete",
              "Always"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "doubleHeight",
            "displayName": "double-height",
            "description": "Places obsidian on top of the original surround blocks to prevent people from face-placing you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnGround",
            "displayName": "only-on-ground",
            "description": "Works only when you are standing on blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleModules",
            "displayName": "toggle-modules",
            "description": "Turn off other modules when surround is activated.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleBack",
            "displayName": "toggle-back-on",
            "description": "Turn the other modules back on when surround is deactivated.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically faces towards the obsidian being placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "protect",
            "displayName": "protect",
            "description": "Attempts to break crystals around surround positions to prevent surround break.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnYChange",
            "displayName": "toggle-on-y-change",
            "description": "Automatically disables when your y level changes (step, jumping, etc).",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Toggles",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnComplete",
            "displayName": "toggle-on-complete",
            "description": "Toggles off when all blocks are placed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Toggles",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnDeath",
            "displayName": "toggle-on-death",
            "description": "Toggles off when you die.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Toggles",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Render your hand swinging when placing surround blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders a block overlay where the obsidian will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderBelow",
            "displayName": "below",
            "description": "Renders the block below you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "safeSideColor",
            "displayName": "safe-side-color",
            "description": "The side color for safe blocks.",
            "defaultValue": "new SettingColor(13, 255, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "safeLineColor",
            "displayName": "safe-line-color",
            "description": "The line color for safe blocks.",
            "defaultValue": "new SettingColor(13, 255, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "normalSideColor",
            "displayName": "normal-side-color",
            "description": "The side color for normal blocks.",
            "defaultValue": "new SettingColor(0, 255, 238, 12",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "normalLineColor",
            "displayName": "normal-line-color",
            "description": "The line color for normal blocks.",
            "defaultValue": "new SettingColor(0, 255, 238, 100",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unsafeSideColor",
            "displayName": "unsafe-side-color",
            "description": "The side color for unsafe blocks.",
            "defaultValue": "new SettingColor(204, 0, 0, 12",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unsafeLineColor",
            "displayName": "unsafe-line-color",
            "description": "The line color for unsafe blocks.",
            "defaultValue": "new SettingColor(204, 0, 0, 100",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  },
  {
    "name": "misc",
    "modules": [
      {
        "name": "AntiPacketKick",
        "settings": [
          {
            "variableName": "catchExceptions",
            "displayName": "catch-exceptions",
            "description": "Drops corrupted packets.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "logExceptions",
            "displayName": "log-exceptions",
            "description": "Logs caught exceptions.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoLog",
        "settings": [
          {
            "variableName": "health",
            "displayName": "health",
            "description": "Automatically disconnects when health is lower or equal to this value.",
            "defaultValue": "6",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "19",
            "step": null
          },
          {
            "variableName": "smart",
            "displayName": "smart",
            "description": "Disconnects when you're about to take enough damage to kill you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyTrusted",
            "displayName": "only-trusted",
            "description": "Disconnects when a player not on your friends list appears in render distance.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "instantDeath",
            "displayName": "32K",
            "description": "Disconnects when a player near you can instantly kill you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "useTotalCount",
            "displayName": "use-total-count",
            "description": "Toggle between counting the total number of all selected entities or each entity individually.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "combinedEntityThreshold",
            "displayName": "combined-entity-threshold",
            "description": "The minimum total number of selected entities that must be near you before disconnection occurs.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Entities",
            "min": "1",
            "max": "32",
            "step": null
          },
          {
            "variableName": "individualEntityThreshold",
            "displayName": "individual-entity-threshold",
            "description": "The minimum number of entities individually that must be near you before disconnection occurs.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Entities",
            "min": "1",
            "max": "16",
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "How close an entity has to be to you before you disconnect.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Entities",
            "min": "1",
            "max": "16",
            "step": null
          },
          {
            "variableName": "smartToggle",
            "displayName": "smart-toggle",
            "description": "Disables Auto Log after a low-health logout. WILL re-enable once you heal.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOff",
            "displayName": "toggle-off",
            "description": "Disables Auto Log after usage.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoReconnect",
        "settings": [
          {
            "variableName": "time",
            "displayName": "delay",
            "description": "The amount of seconds to wait before reconnecting to the server.",
            "defaultValue": "3.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": "0.1"
          }
        ]
      },
      {
        "name": "AutoRespawn",
        "settings": []
      },
      {
        "name": "BetterBeacons",
        "settings": []
      },
      {
        "name": "BetterChat",
        "settings": [
          {
            "variableName": "annoy",
            "displayName": "annoy",
            "description": "Makes your messages aNnOyInG.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fancy",
            "displayName": "fancy-chat",
            "description": "Makes your messages ғᴀɴᴄʏ!",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "timestamps",
            "displayName": "timestamps",
            "description": "Adds client-side time stamps to the beginning of chat messages.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playerHeads",
            "displayName": "player-heads",
            "description": "Displays player heads next to their messages.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "coordsProtection",
            "displayName": "coords-protection",
            "description": "Prevents you from sending messages in chat that may contain coordinates.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "keepHistory",
            "displayName": "keep-history",
            "description": "Prevents the chat history from being cleared when disconnecting.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiSpam",
            "displayName": "anti-spam",
            "description": "Blocks duplicate messages from filling your chat.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Filter",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiSpamDepth",
            "displayName": "depth",
            "description": "How many messages to filter.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Filter",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "antiClear",
            "displayName": "anti-clear",
            "description": "Prevents servers from clearing chat.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Filter",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "filterRegex",
            "displayName": "filter-regex",
            "description": "Filter out chat messages that match the regex filter.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Filter",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "infiniteChatBox",
            "displayName": "infinite-chat-box",
            "description": "Lets you type infinitely long messages.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Longer Chat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "longerChatHistory",
            "displayName": "longer-chat-history",
            "description": "Extends chat length.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Longer Chat",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "longerChatLines",
            "displayName": "extra-lines",
            "description": "The amount of extra chat lines.",
            "defaultValue": "1000",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Longer Chat",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "prefix",
            "displayName": "prefix",
            "description": "Adds a prefix to your chat messages.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Prefix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "prefixRandom",
            "displayName": "random",
            "description": "Uses a random number as your prefix.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Prefix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "prefixText",
            "displayName": "text",
            "description": "The text to add as your prefix.",
            "defaultValue": "> ",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Prefix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "prefixSmallCaps",
            "displayName": "small-caps",
            "description": "Uses small caps in the prefix.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Prefix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "suffix",
            "displayName": "suffix",
            "description": "Adds a suffix to your chat messages.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Suffix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "suffixRandom",
            "displayName": "random",
            "description": "Uses a random number as your suffix.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Suffix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "suffixText",
            "displayName": "text",
            "description": "The text to add as your suffix.",
            "defaultValue": " | meteor on crack!",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Suffix",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "suffixSmallCaps",
            "displayName": "small-caps",
            "description": "Uses small caps in the suffix.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Suffix",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BookBot",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "What kind of text to write.",
            "defaultValue": "Mode.Random",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "File",
              "Random"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pages",
            "displayName": "pages",
            "description": "The number of pages to write per book.",
            "defaultValue": "50",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "onlyAscii",
            "displayName": "ascii-only",
            "description": "Only uses the characters in the ASCII charset.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The amount of delay between writing books.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "sign",
            "displayName": "sign",
            "description": "Whether to sign the book.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "name",
            "displayName": "name",
            "description": "The name you want to give your books.",
            "defaultValue": "Meteor on Crack!",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "count",
            "displayName": "append-count",
            "description": "Whether to append the number of the book to the title.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "DiscordPresence",
        "settings": [
          {
            "variableName": "line1UpdateDelay",
            "displayName": "line-1-update-delay",
            "description": "How fast to update the first line in ticks.",
            "defaultValue": "200",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Line 1",
            "min": "10",
            "max": null,
            "step": null
          },
          {
            "variableName": "line1SelectMode",
            "displayName": "line-1-select-mode",
            "description": "How to select messages for the first line.",
            "defaultValue": "SelectMode.Sequential",
            "type": "SelectMode",
            "builderType": "Enum",
            "options": [
              "Random",
              "Sequential"
            ],
            "groupName": "Line 1",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "line2UpdateDelay",
            "displayName": "line-2-update-delay",
            "description": "How fast to update the second line in ticks.",
            "defaultValue": "60",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Line 2",
            "min": "10",
            "max": null,
            "step": null
          },
          {
            "variableName": "line2SelectMode",
            "displayName": "line-2-select-mode",
            "description": "How to select messages for the second line.",
            "defaultValue": "SelectMode.Sequential",
            "type": "SelectMode",
            "builderType": "Enum",
            "options": [
              "Random",
              "Sequential"
            ],
            "groupName": "Line 2",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "InventoryTweaks",
        "settings": [
          {
            "variableName": "mouseDragItemMove",
            "displayName": "mouse-drag-item-move",
            "description": "Moving mouse over items while holding shift will transfer it to the other container.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "xCarry",
            "displayName": "xcarry",
            "description": "Allows you to store four extra item stacks in your crafting grid.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "armorStorage",
            "displayName": "armor-storage",
            "description": "Allows you to put normal items in your armor slots.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sortingEnabled",
            "displayName": "sorting-enabled",
            "description": "Automatically sorts stacks in inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Sorting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sortingKey",
            "displayName": "sorting-key",
            "description": "Key to trigger the sort.",
            "defaultValue": "Keybind.fromButton(GLFW.GLFW_MOUSE_BUTTON_MIDDLE",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Sorting",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sortingDelay",
            "displayName": "sorting-delay",
            "description": "Delay in ticks between moving items when sorting.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Sorting",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDropExcludeEquipped",
            "displayName": "exclude-equipped",
            "description": "Whether or not to drop items equipped in armor slots.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Auto Drop",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDropExcludeHotbar",
            "displayName": "exclude-hotbar",
            "description": "Whether or not to drop items from your hotbar.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Auto Drop",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDropOnlyFullStacks",
            "displayName": "only-full-stacks",
            "description": "Only drops the items if the stack is full.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Auto Drop",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "buttons",
            "displayName": "inventory-buttons",
            "description": "Shows steal and dump buttons in container guis.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Steal and Dump",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stealDrop",
            "displayName": "steal-drop",
            "description": "Drop items to the ground instead of stealing them.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Steal and Dump",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dropBackwards",
            "displayName": "drop-backwards",
            "description": "Drop items behind you.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Steal and Dump",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dumpFilter",
            "displayName": "dump-filter",
            "description": "Dump mode.",
            "defaultValue": "ListMode.None",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist",
              "None"
            ],
            "groupName": "Steal and Dump",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stealFilter",
            "displayName": "steal-filter",
            "description": "Steal mode.",
            "defaultValue": "ListMode.None",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist",
              "None"
            ],
            "groupName": "Steal and Dump",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoSteal",
            "displayName": "auto-steal",
            "description": "Automatically removes all possible items when you open a container.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Auto Steal",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDump",
            "displayName": "auto-dump",
            "description": "Automatically dumps all possible items when you open a container.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Auto Steal",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoStealDelay",
            "displayName": "delay",
            "description": "The minimum delay between stealing the next stack in milliseconds.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Auto Steal",
            "min": null,
            "max": "1000",
            "step": null
          },
          {
            "variableName": "autoStealInitDelay",
            "displayName": "initial-delay",
            "description": "The initial delay before stealing in milliseconds. 0 to use normal delay instead.",
            "defaultValue": "50",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Auto Steal",
            "min": null,
            "max": "1000",
            "step": null
          },
          {
            "variableName": "autoStealRandomDelay",
            "displayName": "random",
            "description": "Randomly adds a delay of up to the specified time in milliseconds.",
            "defaultValue": "50",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Auto Steal",
            "min": "0",
            "max": "1000",
            "step": null
          }
        ]
      },
      {
        "name": "MessageAura",
        "settings": [
          {
            "variableName": "message",
            "displayName": "message",
            "description": "The specified message sent to the player.",
            "defaultValue": "Meteor on Crack!",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreFriends",
            "displayName": "ignore-friends",
            "description": "Will not send any messages to people friended.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NameProtect",
        "settings": [
          {
            "variableName": "nameProtect",
            "displayName": "name-protect",
            "description": "Hides your name client-side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "name",
            "displayName": "name",
            "description": "Name to be replaced with.",
            "defaultValue": "seasnail",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "skinProtect",
            "displayName": "skin-protect",
            "description": "Make players become Steves.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Notebot",
        "settings": [
          {
            "variableName": "tickDelay",
            "displayName": "tick-delay",
            "description": "The delay when loading a song.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "concurrentTuneBlocks",
            "displayName": "concurrent-tune-blocks",
            "description": "How many noteblocks can be tuned at the same time. On Paper it is recommended to set it to 1 to avoid bugs.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Select mode of notebot",
            "defaultValue": "NotebotUtils.NotebotMode.ExactInstruments",
            "type": "NotebotUtils.NotebotMode",
            "builderType": "Enum",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "instrumentDetectMode",
            "displayName": "instrument-detect-mode",
            "description": "Select an instrument detect mode. Can be useful when server has a plugin that modifies noteblock state (e.g ItemsAdder) but noteblock can still play the right note",
            "defaultValue": "InstrumentDetectMode.BlockState",
            "type": "InstrumentDetectMode",
            "builderType": "Enum",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "polyphonic",
            "displayName": "polyphonic",
            "description": "Whether or not to allow multiple notes to be played at the same time",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoRotate",
            "displayName": "auto-rotate",
            "description": "Should client look at note block when it wants to hit it",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoPlay",
            "displayName": "auto-play",
            "description": "Auto plays random songs",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "roundOutOfRange",
            "displayName": "round-out-of-range",
            "description": "Rounds out of range notes",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingArm",
            "displayName": "swing-arm",
            "description": "Should swing arm on hit",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "checkNoteblocksAgainDelay",
            "displayName": "check-noteblocks-again-delay",
            "description": "How much delay should be between end of tuning and checking again",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "renderText",
            "displayName": "render-text",
            "description": "Whether or not to render the text above noteblocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderBoxes",
            "displayName": "render-boxes",
            "description": "Whether or not to render the outline around the noteblocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "untunedSideColor",
            "displayName": "untuned-side-color",
            "description": "The color of the sides of the untuned blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "untunedLineColor",
            "displayName": "untuned-line-color",
            "description": "The color of the lines of the untuned blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tunedSideColor",
            "displayName": "untuned-side-color",
            "description": "The color of the sides of the untuned blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tunedLineColor",
            "displayName": "untuned-line-color",
            "description": "The color of the lines of the untuned blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tuneHitSideColor",
            "displayName": "hit-side-color",
            "description": "The color of the sides being rendered on noteblock tune hit.",
            "defaultValue": "new SettingColor(255, 153, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tuneHitLineColor",
            "displayName": "hit-line-color",
            "description": "The color of the lines being rendered on noteblock tune hit.",
            "defaultValue": "new SettingColor(255, 153, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scannedNoteblockSideColor",
            "displayName": "scanned-noteblock-side-color",
            "description": "The color of the sides of the scanned noteblocks being rendered.",
            "defaultValue": "new SettingColor(255, 255, 0, 30",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scannedNoteblockLineColor",
            "displayName": "scanned-noteblock-line-color",
            "description": "The color of the lines of the scanned noteblocks being rendered.",
            "defaultValue": "new SettingColor(255, 255, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noteTextScale",
            "displayName": "note-text-scale",
            "description": "The scale.",
            "defaultValue": "1.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "sgRender",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "showScannedNoteblocks",
            "displayName": "show-scanned-noteblocks",
            "description": "Show scanned Noteblocks",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "sgRender",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Notifier",
        "settings": [
          {
            "variableName": "totemPops",
            "displayName": "totem-pops",
            "description": "Notifies you when a player pops a totem.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem Pops",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "totemsDistanceCheck",
            "displayName": "distance-check",
            "description": "Limits the distance in which the pops are recognized.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem Pops",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "totemsDistance",
            "displayName": "player-radius",
            "description": "The radius in which to log totem pops.",
            "defaultValue": "30",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Totem Pops",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "totemsIgnoreOwn",
            "displayName": "ignore-own",
            "description": "Ignores your own totem pops.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem Pops",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "totemsIgnoreFriends",
            "displayName": "ignore-friends",
            "description": "Ignores friends totem pops.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem Pops",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "totemsIgnoreOthers",
            "displayName": "ignore-others",
            "description": "Ignores other players totem pops.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Totem Pops",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "visualRange",
            "displayName": "visual-range",
            "description": "Notifies you when an entity enters your render distance.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Visual Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "event",
            "displayName": "event",
            "description": "When to log the entities.",
            "defaultValue": "Event.Both",
            "type": "Event",
            "builderType": "Enum",
            "options": [
              "Spawn",
              "Despawn",
              "Both"
            ],
            "groupName": "Visual Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "visualRangeIgnoreFriends",
            "displayName": "ignore-friends",
            "description": "Ignores friends.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Visual Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "visualRangeIgnoreFakes",
            "displayName": "ignore-fake-players",
            "description": "Ignores fake players.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Visual Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "visualMakeSound",
            "displayName": "sound",
            "description": "Emits a sound effect on enter / leave",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Visual Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pearl",
            "displayName": "pearl",
            "description": "Notifies you when a player is teleported using an ender pearl.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pearl",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pearlIgnoreOwn",
            "displayName": "ignore-own",
            "description": "Ignores your own pearls.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pearl",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pearlIgnoreFriends",
            "displayName": "ignore-friends",
            "description": "Ignores friends pearls.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Pearl",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "joinsLeavesMode",
            "displayName": "player-joins-leaves",
            "description": "How to handle player join/leave notifications.",
            "defaultValue": "JoinLeaveModes.None",
            "type": "JoinLeaveModes",
            "builderType": "Enum",
            "options": [
              "None",
              "Joins",
              "Leaves",
              "Both"
            ],
            "groupName": "Joins/Leaves",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "notificationDelay",
            "displayName": "notification-delay",
            "description": "How long to wait in ticks before posting the next join/leave notification in your chat.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Joins/Leaves",
            "min": "0",
            "max": "1000",
            "step": null
          },
          {
            "variableName": "simpleNotifications",
            "displayName": "simple-notifications",
            "description": "Display join/leave notifications without a prefix, to reduce chat clutter.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Joins/Leaves",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "PacketCanceller",
        "settings": []
      },
      {
        "name": "ServerSpoof",
        "settings": [
          {
            "variableName": "spoofBrand",
            "displayName": "spoof-brand",
            "description": "Whether or not to spoof the brand.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "brand",
            "displayName": "brand",
            "description": "Specify the brand that will be send to the server.",
            "defaultValue": "vanilla",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "resourcePack",
            "displayName": "resource-pack",
            "description": "Spoof accepting server resource pack.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blockChannels",
            "displayName": "block-channels",
            "description": "Whether or not to block some channels.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "SoundBlocker",
        "settings": []
      },
      {
        "name": "Spam",
        "settings": [
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The delay between specified messages in ticks.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "200",
            "step": null
          },
          {
            "variableName": "disableOnLeave",
            "displayName": "disable-on-leave",
            "description": "Disables spam when you leave a server.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "disableOnDisconnect",
            "displayName": "disable-on-disconnect",
            "description": "Disables spam when you are disconnected from a server.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "random",
            "displayName": "randomise",
            "description": "Selects a random message from your spam message list.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoSplitMessages",
            "displayName": "auto-split-messages",
            "description": "Automatically split up large messages after a certain length",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "splitLength",
            "displayName": "split-length",
            "description": "The length after which to split messages in chat",
            "defaultValue": "256",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "256",
            "step": null
          },
          {
            "variableName": "autoSplitDelay",
            "displayName": "split-delay",
            "description": "The delay between split messages in ticks.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "200",
            "step": null
          },
          {
            "variableName": "bypass",
            "displayName": "bypass",
            "description": "Add random text at the end of the message to try to bypass anti spams.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "uppercase",
            "displayName": "include-uppercase-characters",
            "description": "Whether the bypass text should include uppercase characters.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "length",
            "displayName": "length",
            "description": "Number of characters used to bypass anti spam.",
            "defaultValue": "16",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  },
  {
    "name": "movement",
    "modules": [
      {
        "name": "AirJump",
        "settings": [
          {
            "variableName": "maintainLevel",
            "displayName": "maintain-level",
            "description": "Maintains your current Y level when holding the jump key.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Anchor",
        "settings": [
          {
            "variableName": "maxHeight",
            "displayName": "max-height",
            "description": "The maximum height Anchor will work at.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "255",
            "step": null
          },
          {
            "variableName": "minPitch",
            "displayName": "min-pitch",
            "description": "The minimum pitch at which anchor will work.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "-90",
            "max": "90",
            "step": null
          },
          {
            "variableName": "cancelMove",
            "displayName": "cancel-jump-in-hole",
            "description": "Prevents you from jumping when Anchor is active and Min Pitch is met.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pull",
            "displayName": "pull",
            "description": "The pull strength of Anchor.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pullSpeed",
            "displayName": "pull-speed",
            "description": "How fast to pull towards the hole in blocks per second.",
            "defaultValue": "0.3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          }
        ]
      },
      {
        "name": "AntiAFK",
        "settings": [
          {
            "variableName": "jump",
            "displayName": "jump",
            "description": "Jump randomly.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swing",
            "displayName": "swing",
            "description": "Swings your hand.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sneak",
            "displayName": "sneak",
            "description": "Sneaks and unsneaks quickly.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sneakTime",
            "displayName": "sneak-time",
            "description": "How many ticks to stay sneaked.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Actions",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "strafe",
            "displayName": "strafe",
            "description": "Strafe right and left.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "spin",
            "displayName": "spin",
            "description": "Spins the player in place.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "spinMode",
            "displayName": "spin-mode",
            "description": "The method of rotating.",
            "defaultValue": "SpinMode.Server",
            "type": "SpinMode",
            "builderType": "Enum",
            "options": [
              "Server",
              "Client"
            ],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "spinSpeed",
            "displayName": "speed",
            "description": "The speed to spin you.",
            "defaultValue": "7",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Actions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pitch",
            "displayName": "pitch",
            "description": "The pitch to send to the server.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Actions",
            "min": "-90",
            "max": "90",
            "step": null
          },
          {
            "variableName": "sendMessages",
            "displayName": "send-messages",
            "description": "Sends messages to prevent getting kicked for AFK.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Messages",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "randomMessage",
            "displayName": "random",
            "description": "Selects a random message from your message list.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Messages",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The delay between specified messages in seconds.",
            "defaultValue": "15",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Messages",
            "min": "0",
            "max": "30",
            "step": null
          }
        ]
      },
      {
        "name": "AntiVoid",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The method to prevent you from falling into the void.",
            "defaultValue": "Mode.Jump",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Flight",
              "Jump"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoJump",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The method of jumping.",
            "defaultValue": "Mode.Jump",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Jump",
              "LowHop"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "jumpIf",
            "displayName": "jump-if",
            "description": "Jump if.",
            "defaultValue": "JumpWhen.Always",
            "type": "JumpWhen",
            "builderType": "Enum",
            "options": [
              "Sprinting",
              "Walking",
              "Always"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "velocityHeight",
            "displayName": "velocity-height",
            "description": "The distance that velocity mode moves you.",
            "defaultValue": "0.25",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "2",
            "step": null
          }
        ]
      },
      {
        "name": "AutoWalk",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Walking mode.",
            "defaultValue": "Mode.Smart",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Simple",
              "Smart"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "direction",
            "displayName": "simple-direction",
            "description": "The direction to walk in simple mode.",
            "defaultValue": "Direction.Forwards",
            "type": "Direction",
            "builderType": "Enum",
            "options": [
              "Forwards",
              "Backwards",
              "Left",
              "Right"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoWasp",
        "settings": [
          {
            "variableName": "horizontalSpeed",
            "displayName": "horizontal-speed",
            "description": "Horizontal elytra speed.",
            "defaultValue": "2.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "verticalSpeed",
            "displayName": "vertical-speed",
            "description": "Vertical elytra speed.",
            "defaultValue": "3.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "avoidLanding",
            "displayName": "avoid-landing",
            "description": "Will try to avoid landing if your target is on the ground.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "predictMovement",
            "displayName": "predict-movement",
            "description": "Tries to predict the targets position according to their movement.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyFriends",
            "displayName": "only-friends",
            "description": "Will only follow friends.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "action",
            "displayName": "action-on-target-loss",
            "description": "What to do if you lose the target.",
            "defaultValue": "Action.TOGGLE",
            "type": "Action",
            "builderType": "Enum",
            "options": [
              "TOGGLE",
              "CHOOSE_NEW_TARGET",
              "DISCONNECT"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "offset",
            "displayName": "offset",
            "description": "How many blocks offset to wasp at from the target.",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Blink",
        "settings": [
          {
            "variableName": "renderOriginal",
            "displayName": "render-original",
            "description": "Renders your player model at the original position.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "cancelBlink",
            "displayName": "cancel-blink",
            "description": "Cancels sending packets and sends you back to your original position.",
            "defaultValue": "Keybind.none(",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BoatFly",
        "settings": [
          {
            "variableName": "speed",
            "displayName": "speed",
            "description": "Horizontal speed in blocks per second.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "50",
            "step": null
          },
          {
            "variableName": "verticalSpeed",
            "displayName": "vertical-speed",
            "description": "Vertical speed in blocks per second.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "fallSpeed",
            "displayName": "fall-speed",
            "description": "How fast you fall in blocks per second.",
            "defaultValue": "0.1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "cancelServerPackets",
            "displayName": "cancel-server-packets",
            "description": "Cancels incoming boat move packets.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ClickTP",
        "settings": [
          {
            "variableName": "maxDistance",
            "displayName": "max-distance",
            "description": "The maximum distance you can teleport.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ElytraBoost",
        "settings": [
          {
            "variableName": "dontConsumeFirework",
            "displayName": "anti-consume",
            "description": "Prevents fireworks from being consumed when using Elytra Boost.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fireworkLevel",
            "displayName": "firework-duration",
            "description": "The duration of the firework.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "255",
            "step": null
          },
          {
            "variableName": "playSound",
            "displayName": "play-sound",
            "description": "Plays the firework sound when a boost is triggered.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "keybind",
            "displayName": "keybind",
            "description": "The keybind to boost.",
            "defaultValue": "",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EntityControl",
        "settings": [
          {
            "variableName": "maxJump",
            "displayName": "max-jump",
            "description": "Sets jump power to maximum.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EntitySpeed",
        "settings": [
          {
            "variableName": "speed",
            "displayName": "speed",
            "description": "Horizontal speed in blocks per second.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "50",
            "step": null
          },
          {
            "variableName": "onlyOnGround",
            "displayName": "only-on-ground",
            "description": "Use speed only when standing on a block.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "inWater",
            "displayName": "in-water",
            "description": "Use speed when in water.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "FastClimb",
        "settings": [
          {
            "variableName": "timerMode",
            "displayName": "timer-mode",
            "description": "Use timer.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "speed",
            "displayName": "climb-speed",
            "description": "Your climb speed.",
            "defaultValue": "0.2872",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "timer",
            "displayName": "timer",
            "description": "The timer value for Timer.",
            "defaultValue": "1.436",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Flight",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The mode for Flight.",
            "defaultValue": "Mode.Abilities",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Abilities",
              "Velocity"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "speed",
            "displayName": "speed",
            "description": "Your speed when flying.",
            "defaultValue": "0.1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "verticalSpeedMatch",
            "displayName": "vertical-speed-match",
            "description": "Matches your vertical speed to your horizontal speed, otherwise uses vanilla ratio.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noSneak",
            "displayName": "no-sneak",
            "description": "Prevents you from sneaking while flying.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiKickMode",
            "displayName": "mode",
            "description": "The mode for anti kick.",
            "defaultValue": "AntiKickMode.Packet",
            "type": "AntiKickMode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Packet",
              "None"
            ],
            "groupName": "Anti Kick",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "The amount of delay, in ticks, between flying down a bit and return to original position",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Anti Kick",
            "min": "1",
            "max": "200",
            "step": null
          },
          {
            "variableName": "offTime",
            "displayName": "off-time",
            "description": "The amount of delay, in milliseconds, to fly down a bit to reset floating ticks.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Anti Kick",
            "min": "1",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "GUIMove",
        "settings": [
          {
            "variableName": "screens",
            "displayName": "guis",
            "description": "Which GUIs to move in.",
            "defaultValue": "Screens.Inventory",
            "type": "Screens",
            "builderType": "Enum",
            "options": [
              "GUI",
              "Inventory",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "jump",
            "displayName": "jump",
            "description": "Allows you to jump while in GUIs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sneak",
            "displayName": "sneak",
            "description": "Allows you to sneak while in GUIs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sprint",
            "displayName": "sprint",
            "description": "Allows you to sprint while in GUIs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "arrowsRotate",
            "displayName": "arrows-rotate",
            "description": "Allows you to use your arrow keys to rotate while in GUIs.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotateSpeed",
            "displayName": "rotate-speed",
            "description": "Rotation speed while in GUIs.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "HighJump",
        "settings": [
          {
            "variableName": "multiplier",
            "displayName": "jump-multiplier",
            "description": "Jump height multiplier.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Jesus",
        "settings": [
          {
            "variableName": "powderSnow",
            "displayName": "powder-snow",
            "description": "Walk on powder snow.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "General",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "waterMode",
            "displayName": "mode",
            "description": "How to treat the water.",
            "defaultValue": "Mode.Solid",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Solid",
              "Bob",
              "Ignore"
            ],
            "groupName": "Water",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipIfBurning",
            "displayName": "dip-if-burning",
            "description": "Lets you go into the water when you are burning.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Water",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipOnSneakWater",
            "displayName": "dip-on-sneak",
            "description": "Lets you go into the water when your sneak key is held.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Water",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipOnFallWater",
            "displayName": "dip-on-fall",
            "description": "Lets you go into the water when you fall over a certain height.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Water",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipFallHeightWater",
            "displayName": "dip-fall-height",
            "description": "The fall height at which you will go into the water.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Water",
            "min": "1",
            "max": "255",
            "step": null
          },
          {
            "variableName": "lavaMode",
            "displayName": "mode",
            "description": "How to treat the lava.",
            "defaultValue": "Mode.Solid",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Solid",
              "Bob",
              "Ignore"
            ],
            "groupName": "Lava",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipIfFireResistant",
            "displayName": "dip-if-resistant",
            "description": "Lets you go into the lava if you have Fire Resistance effect.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Lava",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipOnSneakLava",
            "displayName": "dip-on-sneak",
            "description": "Lets you go into the lava when your sneak key is held.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Lava",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipOnFallLava",
            "displayName": "dip-on-fall",
            "description": "Lets you go into the lava when you fall over a certain height.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Lava",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dipFallHeightLava",
            "displayName": "dip-fall-height",
            "description": "The fall height at which you will go into the lava.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Lava",
            "min": "1",
            "max": "255",
            "step": null
          }
        ]
      },
      {
        "name": "LongJump",
        "settings": [
          {
            "variableName": "jumpMode",
            "displayName": "mode",
            "description": "The method of jumping.",
            "defaultValue": "JumpMode.Vanilla",
            "type": "JumpMode",
            "builderType": "Enum",
            "options": [
              "Vanilla",
              "Burst",
              "Glide"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "vanillaBoostFactor",
            "displayName": "vanilla-boost-factor",
            "description": "The amount by which to boost the jump.",
            "defaultValue": "1.261",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "burstInitialSpeed",
            "displayName": "burst-initial-speed",
            "description": "The initial speed of the runup.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "burstBoostFactor",
            "displayName": "burst-boost-factor",
            "description": "The amount by which to boost the jump.",
            "defaultValue": "2.149",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "onlyOnGround",
            "displayName": "only-on-ground",
            "description": "Only performs the jump if you are on the ground.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onJump",
            "displayName": "on-jump",
            "description": "Whether the player needs to jump first or not.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "glideMultiplier",
            "displayName": "glide-multiplier",
            "description": "The amount by to multiply the glide velocity.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "timer",
            "displayName": "timer",
            "description": "Timer override.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.01",
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDisable",
            "displayName": "auto-disable",
            "description": "Automatically disabled the module after jumping.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "disableOnRubberband",
            "displayName": "disable-on-rubberband",
            "description": "Disables the module when you get lagged back.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoFall",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The way you are saved from fall damage.",
            "defaultValue": "Mode.Packet",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Packet",
              "AirPlace",
              "Place"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placedItem",
            "displayName": "placed-item",
            "description": "Which block to place.",
            "defaultValue": "PlacedItem.Bucket",
            "type": "PlacedItem",
            "builderType": "Enum",
            "options": [
              "Bucket",
              "PowderSnow",
              "HayBale",
              "Cobweb",
              "SlimeBlock"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "airPlaceMode",
            "displayName": "air-place-mode",
            "description": "Whether place mode places before you die or before you take damage.",
            "defaultValue": "PlaceMode.BeforeDeath",
            "type": "PlaceMode",
            "builderType": "Enum",
            "options": [
              "BeforeDamage",
              "BeforeDeath"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "anchor",
            "displayName": "anchor",
            "description": "Centers the player and reduces movement when using bucket or air place mode.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBounce",
            "displayName": "anti-bounce",
            "description": "Disables bouncing on slime-block and bed upon landing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoSlow",
        "settings": [
          {
            "variableName": "items",
            "displayName": "items",
            "description": "Whether or not using items will slow you.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "web",
            "displayName": "web",
            "description": "Whether or not cobwebs will not slow you down.",
            "defaultValue": "WebMode.Vanilla",
            "type": "WebMode",
            "builderType": "Enum",
            "options": [
              "Vanilla",
              "Timer",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "webTimer",
            "displayName": "web-timer",
            "description": "The timer value for WebMode Timer.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "honeyBlock",
            "displayName": "honey-block",
            "description": "Whether or not honey blocks will not slow you down.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "soulSand",
            "displayName": "soul-sand",
            "description": "Whether or not soul sand will not slow you down.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "slimeBlock",
            "displayName": "slime-block",
            "description": "Whether or not slime blocks will not slow you down.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "berryBush",
            "displayName": "berry-bush",
            "description": "Whether or not berry bushes will not slow you down.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "airStrict",
            "displayName": "air-strict",
            "description": "Will attempt to bypass anti-cheats like 2b2t's. Only works while in air.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fluidDrag",
            "displayName": "fluid-drag",
            "description": "Whether or not fluid drag will not slow you down.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sneaking",
            "displayName": "sneaking",
            "description": "Whether or not sneaking will not slow you down.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hunger",
            "displayName": "hunger",
            "description": "Whether or not hunger will not slow you down.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "slowness",
            "displayName": "slowness",
            "description": "Whether or not slowness will not slow you down.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Parkour",
        "settings": [
          {
            "variableName": "edgeDistance",
            "displayName": "edge-distance",
            "description": "How far from the edge should you jump.",
            "defaultValue": "0.001",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.001",
            "max": "0.1",
            "step": null
          }
        ]
      },
      {
        "name": "ReverseStep",
        "settings": [
          {
            "variableName": "fallSpeed",
            "displayName": "fall-speed",
            "description": "How fast to fall in blocks per second.",
            "defaultValue": "3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "fallDistance",
            "displayName": "fall-distance",
            "description": "The maximum fall distance this setting will activate at.",
            "defaultValue": "3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "SafeWalk",
        "settings": []
      },
      {
        "name": "Scaffold",
        "settings": [
          {
            "variableName": "blocksFilter",
            "displayName": "blocks-filter",
            "description": "How to use the block list setting",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fastTower",
            "displayName": "fast-tower",
            "description": "Whether or not to scaffold upwards faster.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "towerSpeed",
            "displayName": "tower-speed",
            "description": "The speed at which to tower.",
            "defaultValue": "0.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "whileMoving",
            "displayName": "while-moving",
            "description": "Allows you to tower while moving.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onlyOnClick",
            "displayName": "only-on-click",
            "description": "Only places blocks when holding right click.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderSwing",
            "displayName": "swing",
            "description": "Renders your client-side swing.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoSwitch",
            "displayName": "auto-switch",
            "description": "Automatically swaps to a block before placing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates towards the blocks being placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "airPlace",
            "displayName": "air-place",
            "description": "Allow air place. This also allows you to modify scaffold radius.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "aheadDistance",
            "displayName": "ahead-distance",
            "description": "How far ahead to place blocks.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "placeRange",
            "displayName": "closest-block-range",
            "description": "How far can scaffold place blocks when you are in air.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "8",
            "step": null
          },
          {
            "variableName": "radius",
            "displayName": "radius",
            "description": "Scaffold radius.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "blocksPerTick",
            "displayName": "blocks-per-tick",
            "description": "How many blocks to place in one tick.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Whether to render blocks that have been placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the target block rendering.",
            "defaultValue": "new SettingColor(197, 137, 232",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Slippy",
        "settings": [
          {
            "variableName": "friction",
            "displayName": "friction",
            "description": "The base friction level.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.01",
            "max": "1.10",
            "step": null
          },
          {
            "variableName": "listMode",
            "displayName": "list-mode",
            "description": "The mode to select blocks.",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Sneak",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which method to sneak.",
            "defaultValue": "Mode.Vanilla",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Packet",
              "Vanilla"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Spider",
        "settings": [
          {
            "variableName": "speed",
            "displayName": "climb-speed",
            "description": "The speed you go up blocks.",
            "defaultValue": "0.2",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Sprint",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "speed-mode",
            "description": "What mode of sprinting.",
            "defaultValue": "Mode.Strict",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Strict",
              "Rage"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "jumpFix",
            "displayName": "jump-fix",
            "description": "Whether to correct jumping directions.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "keepSprint",
            "displayName": "keep-sprint",
            "description": "Whether to keep sprinting after attacking an entity.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unsprintOnHit",
            "displayName": "unsprint-on-hit",
            "description": "Whether to stop sprinting when attacking, to ensure you get crits and sweep attacks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unsprintInWater",
            "displayName": "unsprint-in-water",
            "description": "Whether to stop sprinting when in water.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Step",
        "settings": [
          {
            "variableName": "height",
            "displayName": "height",
            "description": "Step height.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "activeWhen",
            "displayName": "active-when",
            "description": "Step is active when you meet these requirements.",
            "defaultValue": "ActiveWhen.Always",
            "type": "ActiveWhen",
            "builderType": "Enum",
            "options": [
              "Always",
              "Sneaking",
              "NotSneaking"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "safeStep",
            "displayName": "safe-step",
            "description": "Doesn't let you step out of a hole if you are low on health or there is a crystal nearby.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stepHealth",
            "displayName": "step-health",
            "description": "The health you stop being able to step at.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "36",
            "step": null
          }
        ]
      },
      {
        "name": "TridentBoost",
        "settings": [
          {
            "variableName": "multiplier",
            "displayName": "boost",
            "description": "How much your velocity is multiplied by when using riptide.",
            "defaultValue": "2",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.1",
            "max": null,
            "step": null
          },
          {
            "variableName": "allowOutOfWater",
            "displayName": "out-of-water",
            "description": "Whether riptide should work out of water",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Velocity",
        "settings": [
          {
            "variableName": "knockback",
            "displayName": "knockback",
            "description": "Modifies the amount of knockback you take from attacks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "knockbackHorizontal",
            "displayName": "knockback-horizontal",
            "description": "How much horizontal knockback you will take.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "knockbackVertical",
            "displayName": "knockback-vertical",
            "description": "How much vertical knockback you will take.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "explosions",
            "displayName": "explosions",
            "description": "Modifies your knockback from explosions.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "explosionsHorizontal",
            "displayName": "explosions-horizontal",
            "description": "How much velocity you will take from explosions horizontally.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "explosionsVertical",
            "displayName": "explosions-vertical",
            "description": "How much velocity you will take from explosions vertically.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "liquids",
            "displayName": "liquids",
            "description": "Modifies the amount you are pushed by flowing liquids.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "liquidsHorizontal",
            "displayName": "liquids-horizontal",
            "description": "How much velocity you will take from liquids horizontally.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "liquidsVertical",
            "displayName": "liquids-vertical",
            "description": "How much velocity you will take from liquids vertically.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "entityPush",
            "displayName": "entity-push",
            "description": "Modifies the amount you are pushed by entities.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "entityPushAmount",
            "displayName": "entity-push-amount",
            "description": "How much you will be pushed.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "blocks",
            "displayName": "blocks",
            "description": "Prevents you from being pushed out of blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sinking",
            "displayName": "sinking",
            "description": "Prevents you from sinking in liquids.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fishing",
            "displayName": "fishing",
            "description": "Prevents you from being pulled by fishing rods.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  },
  {
    "name": "player",
    "modules": [
      {
        "name": "AntiHunger",
        "settings": [
          {
            "variableName": "sprint",
            "displayName": "sprint",
            "description": "Spoofs sprinting packets.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "onGround",
            "displayName": "on-ground",
            "description": "Spoofs the onGround flag.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoClicker",
        "settings": [
          {
            "variableName": "leftClickMode",
            "displayName": "mode-left",
            "description": "The method of clicking for left clicks.",
            "defaultValue": "Mode.Press",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Disabled",
              "Hold",
              "Press"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "leftClickDelay",
            "displayName": "delay-left",
            "description": "The amount of delay between left clicks in ticks.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "60",
            "step": null
          },
          {
            "variableName": "rightClickMode",
            "displayName": "mode-right",
            "description": "The method of clicking for right clicks.",
            "defaultValue": "Mode.Press",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Disabled",
              "Hold",
              "Press"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rightClickDelay",
            "displayName": "delay-right",
            "description": "The amount of delay between right clicks in ticks.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "60",
            "step": null
          }
        ]
      },
      {
        "name": "AutoEat",
        "settings": [
          {
            "variableName": "pauseAuras",
            "displayName": "pause-auras",
            "description": "Pauses all auras when eating.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseBaritone",
            "displayName": "pause-baritone",
            "description": "Pause baritone when eating.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "thresholdMode",
            "displayName": "threshold-mode",
            "description": "The threshold mode to trigger auto eat.",
            "defaultValue": "ThresholdMode.Any",
            "type": "ThresholdMode",
            "builderType": "Enum",
            "options": [
              "Health",
              "Hunger",
              "Any",
              "Both"
            ],
            "groupName": "Threshold",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "healthThreshold",
            "displayName": "health-threshold",
            "description": "The level of health you eat at.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Threshold",
            "min": "1",
            "max": "19",
            "step": null
          },
          {
            "variableName": "hungerThreshold",
            "displayName": "hunger-threshold",
            "description": "The level of hunger you eat at.",
            "defaultValue": "16",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Threshold",
            "min": "1",
            "max": "19",
            "step": null
          }
        ]
      },
      {
        "name": "AutoFish",
        "settings": [
          {
            "variableName": "autoCast",
            "displayName": "auto-cast",
            "description": "Automatically casts when not fishing.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ticksAutoCast",
            "displayName": "ticks-auto-cast",
            "description": "The amount of ticks to wait before recasting automatically.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "60",
            "step": null
          },
          {
            "variableName": "ticksCatch",
            "displayName": "catch-delay",
            "description": "The amount of ticks to wait before catching the fish.",
            "defaultValue": "6",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "60",
            "step": null
          },
          {
            "variableName": "ticksThrow",
            "displayName": "throw-delay",
            "description": "The amount of ticks to wait before throwing the bobber.",
            "defaultValue": "14",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "60",
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Prevents fishing rod from being broken.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "splashDetectionRangeEnabled",
            "displayName": "splash-detection-range-enabled",
            "description": "Allows you to use multiple accounts next to each other.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Splash Detection",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "splashDetectionRange",
            "displayName": "splash-detection-range",
            "description": "The detection range of a splash. Lower values will not work when the TPS is low.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Splash Detection",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoGap",
        "settings": [
          {
            "variableName": "allowEgap",
            "displayName": "allow-egap",
            "description": "Allow eating E-Gaps over Gaps if found.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "always",
            "displayName": "always",
            "description": "If it should always eat.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseAuras",
            "displayName": "pause-auras",
            "description": "Pauses all auras when eating.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseBaritone",
            "displayName": "pause-baritone",
            "description": "Pause baritone when eating.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "potionsRegeneration",
            "displayName": "potions-regeneration",
            "description": "If it should eat when Regeneration runs out.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Potions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "potionsFireResistance",
            "displayName": "potions-fire-resistance",
            "description": "If it should eat when Fire Resistance runs out. Requires E-Gaps.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Potions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "potionsResistance",
            "displayName": "potions-absorption",
            "description": "If it should eat when Resistance runs out. Requires E-Gaps.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Potions",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "healthEnabled",
            "displayName": "health-enabled",
            "description": "If it should eat when health drops below threshold.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Health",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "healthThreshold",
            "displayName": "health-threshold",
            "description": "Health threshold to eat at. Includes absorption.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Health",
            "min": "0",
            "max": "40",
            "step": null
          }
        ]
      },
      {
        "name": "AutoMend",
        "settings": [
          {
            "variableName": "force",
            "displayName": "force",
            "description": "Replaces item in offhand even if there is some other non-repairable item.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoDisable",
            "displayName": "auto-disable",
            "description": "Automatically disables when there are no more items to repair.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoReplenish",
        "settings": [
          {
            "variableName": "threshold",
            "displayName": "threshold",
            "description": "The threshold of items left this actives at.",
            "defaultValue": "8",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "tickDelay",
            "displayName": "delay",
            "description": "The tick delay to replenish your hotbar.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "offhand",
            "displayName": "offhand",
            "description": "Whether or not to refill your offhand with items.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unstackable",
            "displayName": "unstackable",
            "description": "Replenishes unstackable items.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "searchHotbar",
            "displayName": "search-hotbar",
            "description": "Uses items in your hotbar to replenish if they are the only ones left.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoTool",
        "settings": [
          {
            "variableName": "prefer",
            "displayName": "prefer",
            "description": "Either to prefer Silk Touch, Fortune, or none.",
            "defaultValue": "EnchantPreference.Fortune",
            "type": "EnchantPreference",
            "builderType": "Enum",
            "options": [
              "None",
              "Fortune",
              "SilkTouch"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "silkTouchForEnderChest",
            "displayName": "silk-touch-for-ender-chest",
            "description": "Mines Ender Chests only with the Silk Touch enchantment.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fortuneForOresCrops",
            "displayName": "fortune-for-ores-and-crops",
            "description": "Mines Ores and crops only with the Fortune enchantment.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Stops you from breaking your tool.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "breakDurability",
            "displayName": "anti-break-percentage",
            "description": "The durability percentage to stop using a tool.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "switchBack",
            "displayName": "switch-back",
            "description": "Switches your hand to whatever was selected when releasing your attack key.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "listMode",
            "displayName": "list-mode",
            "description": "Selection mode.",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Whitelist",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BreakDelay",
        "settings": [
          {
            "variableName": "cooldown",
            "displayName": "cooldown",
            "description": "Block break cooldown in ticks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "sgGeneral",
            "min": "0",
            "max": "5",
            "step": null
          },
          {
            "variableName": "noInstaBreak",
            "displayName": "no-insta-break",
            "description": "Prevents you from misbreaking blocks if you can instantly break them.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "sgGeneral",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ChestSwap",
        "settings": [
          {
            "variableName": "chestplate",
            "displayName": "chestplate",
            "description": "Which type of chestplate to swap to.",
            "defaultValue": "Chestplate.PreferNetherite",
            "type": "Chestplate",
            "builderType": "Enum",
            "options": [
              "Diamond",
              "Netherite",
              "PreferDiamond",
              "PreferNetherite"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stayOn",
            "displayName": "stay-on",
            "description": "Stays on and activates when you turn it off.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "closeInventory",
            "displayName": "close-inventory",
            "description": "Sends inventory close after swap.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EXPThrower",
        "settings": []
      },
      {
        "name": "FakePlayer",
        "settings": [
          {
            "variableName": "name",
            "displayName": "name",
            "description": "The name of the fake player.",
            "defaultValue": "seasnail8169",
            "type": "String",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "copyInv",
            "displayName": "copy-inv",
            "description": "Copies your inventory to the fake player.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "health",
            "displayName": "health",
            "description": "The fake player's default health.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "FastUse",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which items to fast use.",
            "defaultValue": "Mode.All",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "All",
              "Some"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blocks",
            "displayName": "blocks",
            "description": "",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "cooldown",
            "displayName": "cooldown",
            "description": "Fast-use cooldown in ticks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "4",
            "step": null
          }
        ]
      },
      {
        "name": "GhostHand",
        "settings": []
      },
      {
        "name": "InstantRebreak",
        "settings": [
          {
            "variableName": "tickDelay",
            "displayName": "delay",
            "description": "The delay between break attempts.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "pick",
            "displayName": "only-pick",
            "description": "Only tries to mine the block if you are holding a pickaxe.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Faces the block being mined server side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders an overlay on the block being broken.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "LiquidInteract",
        "settings": []
      },
      {
        "name": "MiddleClickExtra",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which item to use when you middle click.",
            "defaultValue": "Mode.Pearl",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Pearl",
              "XP",
              "Rocket",
              "Bow",
              "Gap",
              "EGap",
              "Chorus",
              "AddFriend"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "message",
            "displayName": "message",
            "description": "Sends a message to the player when you add them as a friend.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "quickSwap",
            "displayName": "quick-swap",
            "description": "Allows you to use items in your inventory by simulating hotbar key presses. May get flagged by anticheats.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swapBack",
            "displayName": "swap-back",
            "description": "Swap back to your original slot when you finish using an item.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "notify",
            "displayName": "notify",
            "description": "Notifies you when you do not have the specified item in your hotbar.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Multitask",
        "settings": [
          {
            "variableName": "attackingEntities",
            "displayName": "attacking-entities",
            "description": "Lets you attack entities while using an item.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoInteract",
        "settings": [
          {
            "variableName": "blockMineMode",
            "displayName": "block-mine-mode",
            "description": "List mode to use for block mine.",
            "defaultValue": "ListMode.BlackList",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "WhiteList",
              "BlackList"
            ],
            "groupName": "Blocks",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blockInteractMode",
            "displayName": "block-interact-mode",
            "description": "List mode to use for block interact.",
            "defaultValue": "ListMode.BlackList",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "WhiteList",
              "BlackList"
            ],
            "groupName": "Blocks",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blockInteractHand",
            "displayName": "block-interact-hand",
            "description": "Cancels block interaction if performed by this hand.",
            "defaultValue": "HandMode.None",
            "type": "HandMode",
            "builderType": "Enum",
            "options": [
              "Mainhand",
              "Offhand",
              "Both",
              "None"
            ],
            "groupName": "Blocks",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "entityHitMode",
            "displayName": "entity-hit-mode",
            "description": "List mode to use for entity hit.",
            "defaultValue": "ListMode.BlackList",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "WhiteList",
              "BlackList"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "entityInteractMode",
            "displayName": "entity-interact-mode",
            "description": "List mode to use for entity interact.",
            "defaultValue": "ListMode.BlackList",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "WhiteList",
              "BlackList"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "entityInteractHand",
            "displayName": "entity-interact-hand",
            "description": "Cancels entity interaction if performed by this hand.",
            "defaultValue": "HandMode.None",
            "type": "HandMode",
            "builderType": "Enum",
            "options": [
              "Mainhand",
              "Offhand",
              "Both",
              "None"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "friends",
            "displayName": "friends",
            "description": "Friends cancel mode.",
            "defaultValue": "InteractMode.None",
            "type": "InteractMode",
            "builderType": "Enum",
            "options": [
              "Hit",
              "Interact",
              "Both",
              "None"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "babies",
            "displayName": "babies",
            "description": "Baby entity cancel mode.",
            "defaultValue": "InteractMode.None",
            "type": "InteractMode",
            "builderType": "Enum",
            "options": [
              "Hit",
              "Interact",
              "Both",
              "None"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nametagged",
            "displayName": "nametagged",
            "description": "Nametagged entity cancel mode.",
            "defaultValue": "InteractMode.None",
            "type": "InteractMode",
            "builderType": "Enum",
            "options": [
              "Hit",
              "Interact",
              "Both",
              "None"
            ],
            "groupName": "Entities",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoMiningTrace",
        "settings": [
          {
            "variableName": "onlyWhenHoldingPickaxe",
            "displayName": "only-when-holding-a-pickaxe",
            "description": "Whether or not to work only when holding a pickaxe.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoRotate",
        "settings": []
      },
      {
        "name": "OffhandCrash",
        "settings": [
          {
            "variableName": "doCrash",
            "displayName": "do-crash",
            "description": "Sends X number of offhand swap sound packets to the server per tick.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "speed",
            "displayName": "speed",
            "description": "The amount of swaps per tick.",
            "defaultValue": "2000",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "antiCrash",
            "displayName": "anti-crash",
            "description": "Attempts to prevent you from crashing yourself.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Portals",
        "settings": []
      },
      {
        "name": "PotionSaver",
        "settings": [
          {
            "variableName": "onlyWhenStationary",
            "displayName": "only-when-stationary",
            "description": "Only freezes effects when you aren't moving.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "PotionSpoof",
        "settings": [
          {
            "variableName": "clearEffects",
            "displayName": "clear-effects",
            "description": "Clears effects on module disable.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Reach",
        "settings": [
          {
            "variableName": "blockReach",
            "displayName": "extra-block-reach",
            "description": "The distance to add to your block reach.",
            "defaultValue": "",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          },
          {
            "variableName": "entityReach",
            "displayName": "extra-entity-reach",
            "description": "The distance to add to your entity reach.",
            "defaultValue": "",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "1",
            "step": null
          }
        ]
      },
      {
        "name": "Rotation",
        "settings": [
          {
            "variableName": "yawLockMode",
            "displayName": "yaw-lock-mode",
            "description": "The way in which your yaw is locked.",
            "defaultValue": "LockMode.Simple",
            "type": "LockMode",
            "builderType": "Enum",
            "options": [
              "Smart",
              "Simple",
              "None"
            ],
            "groupName": "Yaw",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "yawAngle",
            "displayName": "yaw-angle",
            "description": "Yaw angle in degrees.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Yaw",
            "min": null,
            "max": "360",
            "step": null
          },
          {
            "variableName": "pitchLockMode",
            "displayName": "pitch-lock-mode",
            "description": "The way in which your pitch is locked.",
            "defaultValue": "LockMode.Simple",
            "type": "LockMode",
            "builderType": "Enum",
            "options": [
              "Smart",
              "Simple",
              "None"
            ],
            "groupName": "Pitch",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pitchAngle",
            "displayName": "pitch-angle",
            "description": "Pitch angle in degrees.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Pitch",
            "min": "-90",
            "max": "90",
            "step": null
          }
        ]
      },
      {
        "name": "SpeedMine",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "",
            "defaultValue": "Mode.Damage",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Normal",
              "Haste",
              "Damage"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blocksFilter",
            "displayName": "blocks-filter",
            "description": "How to use the blocks setting.",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "modifier",
            "displayName": "modifier",
            "description": "Mining speed modifier. An additional value of 0.2 is equivalent to one haste level (1.2 = haste 1).",
            "defaultValue": "1.4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "hasteAmplifier",
            "displayName": "haste-amplifier",
            "description": "What value of haste to give you. Above 2 not recommended.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "instamine",
            "displayName": "instamine",
            "description": "Whether or not to instantly mine blocks under certain conditions.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "grimBypass",
            "displayName": "grim-bypass",
            "description": "Bypasses Grim's fastbreak check, working as of 2.3.58",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  },
  {
    "name": "render",
    "modules": [
      {
        "name": "BetterTab",
        "settings": [
          {
            "variableName": "tabSize",
            "displayName": "tablist-size",
            "description": "How many players in total to display in the tablist.",
            "defaultValue": "100",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "tabHeight",
            "displayName": "column-height",
            "description": "How many players to display in each column.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "self",
            "displayName": "highlight-self",
            "description": "Highlights yourself in the tablist.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "selfColor",
            "displayName": "self-color",
            "description": "The color to highlight your name with.",
            "defaultValue": "new SettingColor(250, 130, 30",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "friends",
            "displayName": "highlight-friends",
            "description": "Highlights friends in the tablist.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "accurateLatency",
            "displayName": "accurate-latency",
            "description": "Shows latency as a number in the tablist.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "gamemode",
            "displayName": "gamemode",
            "description": "Display gamemode next to the nick.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BetterTooltips",
        "settings": [
          {
            "variableName": "displayWhen",
            "displayName": "display-when",
            "description": "When to display previews.",
            "defaultValue": "DisplayWhen.Keybind",
            "type": "DisplayWhen",
            "builderType": "Enum",
            "options": [
              "Keybind",
              "Always"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "keybind",
            "displayName": "keybind",
            "description": "The bind for keybind mode.",
            "defaultValue": "Keybind.fromKey(GLFW_KEY_LEFT_ALT",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "middleClickOpen",
            "displayName": "middle-click-open",
            "description": "Opens a GUI window with the inventory of the storage block or book when you middle click the item.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseInCreative",
            "displayName": "pause-in-creative",
            "description": "Pauses middle click open while the player is in creative mode.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shulkers",
            "displayName": "containers",
            "description": "Shows a preview of a containers when hovering over it in an inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shulkerCompactTooltip",
            "displayName": "compact-shulker-tooltip",
            "description": "Compacts the lines of the shulker tooltip.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "echest",
            "displayName": "echests",
            "description": "Shows a preview of your echest when hovering over it in an inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maps",
            "displayName": "maps",
            "description": "Shows a preview of a map when hovering over it in an inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mapsScale",
            "displayName": "map-scale",
            "description": "The scale of the map preview.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Previews",
            "min": "0.001",
            "max": "1",
            "step": null
          },
          {
            "variableName": "books",
            "displayName": "books",
            "description": "Shows contents of a book when hovering over it in an inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "banners",
            "displayName": "banners",
            "description": "Shows banners' patterns when hovering over it in an inventory. Also works with shields.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "entitiesInBuckets",
            "displayName": "entities-in-buckets",
            "description": "Shows entities in buckets when hovering over it in an inventory.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Previews",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "byteSize",
            "displayName": "byte-size",
            "description": "Displays an item's size in bytes in the tooltip.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Other",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "statusEffects",
            "displayName": "status-effects",
            "description": "Adds list of status effects to tooltips of food items.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Other",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "beehive",
            "displayName": "beehive",
            "description": "Displays information about a beehive or bee nest.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Other",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tooltip",
            "displayName": "tooltip",
            "description": "Show the tooltip when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enchantments",
            "displayName": "enchantments",
            "description": "Show enchantments when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "modifiers",
            "displayName": "modifiers",
            "description": "Show item modifiers when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unbreakable",
            "displayName": "unbreakable",
            "description": "",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "canDestroy",
            "displayName": "can-destroy",
            "description": "",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "canPlaceOn",
            "displayName": "can-place-on",
            "description": "",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "additional",
            "displayName": "additional",
            "description": "Show potion effects, firework status, book author, etc when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dye",
            "displayName": "dye",
            "description": "Show dyed item tags when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "upgrades",
            "displayName": "armor-trim",
            "description": "Show armor trims when it's hidden.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hide Flags",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BlockSelection",
        "settings": [
          {
            "variableName": "advanced",
            "displayName": "advanced",
            "description": "Shows a more advanced outline on different types of shape blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "oneSide",
            "displayName": "single-side",
            "description": "Only renders the side you are looking at.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 255, 255, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hideInside",
            "displayName": "hide-when-inside-block",
            "description": "Hide selection when inside target block.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Blur",
        "settings": [
          {
            "variableName": "strength",
            "displayName": "strength",
            "description": "How strong the blur should be.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "20",
            "step": null
          },
          {
            "variableName": "fadeTime",
            "displayName": "fade-time",
            "description": "How long the fade will last in milliseconds.",
            "defaultValue": "100",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "500",
            "step": null
          },
          {
            "variableName": "meteor",
            "displayName": "meteor",
            "description": "Applies blur to Meteor screens.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Screens",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "inventories",
            "displayName": "inventories",
            "description": "Applies blur to inventory screens.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Screens",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "chat",
            "displayName": "chat",
            "description": "Applies blur when in chat.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Screens",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "other",
            "displayName": "other",
            "description": "Applies blur to all other screen types.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Screens",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BossStack",
        "settings": [
          {
            "variableName": "stack",
            "displayName": "stack",
            "description": "Stacks boss bars and adds a counter to the text.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hideName",
            "displayName": "hide-name",
            "description": "Hides the names of boss bars.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "spacing",
            "displayName": "bar-spacing",
            "description": "The spacing reduction between each boss bar.",
            "defaultValue": "10",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Breadcrumbs",
        "settings": [
          {
            "variableName": "color",
            "displayName": "color",
            "description": "The color of the Breadcrumbs trail.",
            "defaultValue": "new SettingColor(225, 25, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxSections",
            "displayName": "max-sections",
            "description": "The maximum number of sections.",
            "defaultValue": "1000",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "sectionLength",
            "displayName": "section-length",
            "description": "The section length in blocks.",
            "defaultValue": "0.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          }
        ]
      },
      {
        "name": "BreakIndicators",
        "settings": [
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "packetMine",
            "displayName": "packet-mine",
            "description": "Whether or not to render blocks being packet mined.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "startColor",
            "displayName": "start-color",
            "description": "The color for the non-broken block.",
            "defaultValue": "new SettingColor(25, 252, 25, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "endColor",
            "displayName": "end-color",
            "description": "The color for the fully-broken block.",
            "defaultValue": "new SettingColor(255, 25, 25, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "CameraTweaks",
        "settings": [
          {
            "variableName": "clip",
            "displayName": "clip",
            "description": "Allows the camera to clip through blocks.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "cameraDistance",
            "displayName": "camera-distance",
            "description": "The distance the third person camera is from the player.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "scrollingEnabled",
            "displayName": "scrolling",
            "description": "Allows you to scroll to change camera distance.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Scrolling",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scrollKeybind",
            "displayName": "bind",
            "description": "Binds camera distance scrolling to a key.",
            "defaultValue": "Keybind.fromKey(GLFW.GLFW_KEY_LEFT_ALT",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Scrolling",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scrollSensitivity",
            "displayName": "sensitivity",
            "description": "Sensitivity of the scroll wheel when changing the cameras distance.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Scrolling",
            "min": "0.01",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Chams",
        "settings": [
          {
            "variableName": "shader",
            "displayName": "shader",
            "description": "Renders a shader over of the entities.",
            "defaultValue": "Shader.Image",
            "type": "Shader",
            "builderType": "Enum",
            "options": [
              "Image",
              "None"
            ],
            "groupName": "Through Walls",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shaderColor",
            "displayName": "color",
            "description": "The color that the shader is drawn with.",
            "defaultValue": "new SettingColor(255, 255, 255, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Through Walls",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreSelfDepth",
            "displayName": "ignore-self",
            "description": "Ignores yourself drawing the player.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Through Walls",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "players",
            "displayName": "players",
            "description": "Enables model tweaks for players.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreSelf",
            "displayName": "ignore-self",
            "description": "Ignores yourself when tweaking player models.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playersTexture",
            "displayName": "texture",
            "description": "Enables player model textures.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playersColor",
            "displayName": "color",
            "description": "The color of player models.",
            "defaultValue": "new SettingColor(198, 135, 254, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playersScale",
            "displayName": "scale",
            "description": "Players scale.",
            "defaultValue": "1.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Players",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "crystals",
            "displayName": "crystals",
            "description": "Enables model tweaks for end crystals.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsScale",
            "displayName": "scale",
            "description": "Crystal scale.",
            "defaultValue": "0.6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Crystals",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsBounce",
            "displayName": "bounce",
            "description": "How high crystals bounce.",
            "defaultValue": "0.6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Crystals",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsRotationSpeed",
            "displayName": "rotation-speed",
            "description": "Multiplies the rotation speed of the crystal.",
            "defaultValue": "0.3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Crystals",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsTexture",
            "displayName": "texture",
            "description": "Whether to render crystal model textures.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderCore",
            "displayName": "render-core",
            "description": "Enables rendering of the core of the crystal.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsCoreColor",
            "displayName": "core-color",
            "description": "The color of the core of the crystal.",
            "defaultValue": "new SettingColor(198, 135, 254, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderFrame1",
            "displayName": "render-inner-frame",
            "description": "Enables rendering of the inner frame of the crystal.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsFrame1Color",
            "displayName": "inner-frame-color",
            "description": "The color of the inner frame of the crystal.",
            "defaultValue": "new SettingColor(198, 135, 254, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderFrame2",
            "displayName": "render-outer-frame",
            "description": "Enables rendering of the outer frame of the crystal.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "crystalsFrame2Color",
            "displayName": "outer-frame-color",
            "description": "The color of the outer frame of the crystal.",
            "defaultValue": "new SettingColor(198, 135, 254, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Crystals",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "hand",
            "displayName": "enabled",
            "description": "Enables tweaks of hand rendering.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "handTexture",
            "displayName": "texture",
            "description": "Whether to render hand textures.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "handColor",
            "displayName": "hand-color",
            "description": "The color of your hand.",
            "defaultValue": "new SettingColor(198, 135, 254, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Hand",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "CityESP",
        "settings": [
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the rendering.",
            "defaultValue": "new SettingColor(225, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the rendering.",
            "defaultValue": "new SettingColor(225, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ESP",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Rendering mode.",
            "defaultValue": "Mode.Shader",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Box",
              "Wireframe",
              "_2D",
              "Shader",
              "Glow"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "outlineWidth",
            "displayName": "outline-width",
            "description": "The width of the shader outline.",
            "defaultValue": "2",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "10",
            "step": null
          },
          {
            "variableName": "glowMultiplier",
            "displayName": "glow-multiplier",
            "description": "Multiplier for glow effect",
            "defaultValue": "3.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "10",
            "step": "0.001"
          },
          {
            "variableName": "ignoreSelf",
            "displayName": "ignore-self",
            "description": "Ignores yourself drawing the shader.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fillOpacity",
            "displayName": "fill-opacity",
            "description": "The opacity of the shape fill.",
            "defaultValue": "0.3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "fadeDistance",
            "displayName": "fade-distance",
            "description": "The distance from an entity where the color begins to fade.",
            "defaultValue": "3",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "12",
            "step": null
          },
          {
            "variableName": "distance",
            "displayName": "distance-colors",
            "description": "Changes the color of tracers depending on distance.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "friendOverride",
            "displayName": "show-friend-colors",
            "description": "Whether or not to override the distance color of friends with the friend color.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playersColor",
            "displayName": "players-color",
            "description": "The other player's color.",
            "defaultValue": "new SettingColor(255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "animalsColor",
            "displayName": "animals-color",
            "description": "The animal's color.",
            "defaultValue": "new SettingColor(25, 255, 25, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "waterAnimalsColor",
            "displayName": "water-animals-color",
            "description": "The water animal's color.",
            "defaultValue": "new SettingColor(25, 25, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "monstersColor",
            "displayName": "monsters-color",
            "description": "The monster's color.",
            "defaultValue": "new SettingColor(255, 25, 25, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ambientColor",
            "displayName": "ambient-color",
            "description": "The ambient's color.",
            "defaultValue": "new SettingColor(25, 25, 25, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "miscColor",
            "displayName": "misc-color",
            "description": "The misc color.",
            "defaultValue": "new SettingColor(175, 175, 175, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EntityOwner",
        "settings": [
          {
            "variableName": "scale",
            "displayName": "scale",
            "description": "The scale of the text.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "FreeLook",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which entity to rotate.",
            "defaultValue": "Mode.Player",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Player",
              "Camera"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "togglePerspective",
            "displayName": "toggle-perspective",
            "description": "Changes your perspective on toggle.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sensitivity",
            "displayName": "camera-sensitivity",
            "description": "How fast the camera moves in camera mode.",
            "defaultValue": "8",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "10",
            "step": null
          },
          {
            "variableName": "arrows",
            "displayName": "arrows-control-opposite",
            "description": "Allows you to control the other entities rotation with the arrow keys.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Arrows",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "arrowSpeed",
            "displayName": "arrow-speed",
            "description": "Rotation speed with arrow keys.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Arrows",
            "min": "0",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Freecam",
        "settings": [
          {
            "variableName": "speed",
            "displayName": "speed",
            "description": "Your speed while in freecam.",
            "defaultValue": "1.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "speedScrollSensitivity",
            "displayName": "speed-scroll-sensitivity",
            "description": "Allows you to change speed value using scroll wheel. 0 to disable.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "2",
            "step": null
          },
          {
            "variableName": "toggleOnDamage",
            "displayName": "toggle-on-damage",
            "description": "Disables freecam when you take damage.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnDeath",
            "displayName": "toggle-on-death",
            "description": "Disables freecam when you die.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "toggleOnLog",
            "displayName": "toggle-on-log",
            "description": "Disables freecam when you disconnect from a server.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "reloadChunks",
            "displayName": "reload-chunks",
            "description": "Disables cave culling.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderHands",
            "displayName": "show-hands",
            "description": "Whether or not to render your hands in freecam.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates to the block or entity you are looking at.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "staticView",
            "displayName": "static",
            "description": "Disables settings that move the view.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Fullbright",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The mode to use for Fullbright.",
            "defaultValue": "Mode.Gamma",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Gamma",
              "Luminance"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lightType",
            "displayName": "light-type",
            "description": "Which type of light to use for Luminance mode.",
            "defaultValue": "LightType.BLOCK",
            "type": "LightType",
            "builderType": "Enum",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "minimumLightLevel",
            "displayName": "minimum-light-level",
            "description": "Minimum light level when using Luminance mode.",
            "defaultValue": "8",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "15",
            "step": null
          }
        ]
      },
      {
        "name": "HandView",
        "settings": [
          {
            "variableName": "followRotations",
            "displayName": "server-rotations",
            "description": "Makes your hands follow your serverside rotations.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "oldAnimations",
            "displayName": "old-animations",
            "description": "Changes hit animations to those like 1.8",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "showSwapping",
            "displayName": "show-swapping",
            "description": "Whether or not to show the item swapping animation",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "disableFoodAnimation",
            "displayName": "disable-eating-animation",
            "description": "Disables the eating animation. Potentially desirable if it goes offscreen.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingMode",
            "displayName": "swing-mode",
            "description": "Modifies your client & server hand swinging.",
            "defaultValue": "SwingMode.None",
            "type": "SwingMode",
            "builderType": "Enum",
            "options": [
              "Offhand",
              "Mainhand",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingSpeed",
            "displayName": "swing-speed",
            "description": "The swing speed of your hands.",
            "defaultValue": "6",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "mainSwing",
            "displayName": "main-hand-progress",
            "description": "The swing progress of your main hand.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "offSwing",
            "displayName": "off-hand-progress",
            "description": "The swing progress of your off hand.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "1",
            "step": null
          },
          {
            "variableName": "scaleMain",
            "displayName": "scale",
            "description": "The scale of your main hand.",
            "defaultValue": "1, 1, 1",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Main Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "posMain",
            "displayName": "position",
            "description": "The position of your main hand.",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Main Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotMain",
            "displayName": "rotation",
            "description": "The rotation of your main hand.",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Main Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scaleOff",
            "displayName": "scale",
            "description": "The scale of your off hand.",
            "defaultValue": "1, 1, 1",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Off Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "posOff",
            "displayName": "position",
            "description": "The position of your off hand.",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Off Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotOff",
            "displayName": "rotation",
            "description": "The rotation of your off hand.",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Off Hand",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scaleArm",
            "displayName": "scale",
            "description": "",
            "defaultValue": "1, 1, 1",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Arm",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "posArm",
            "displayName": "position",
            "description": "",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Arm",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotArm",
            "displayName": "rotation",
            "description": "",
            "defaultValue": "0, 0, 0",
            "type": "Vector3d",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Arm",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "HoleESP",
        "settings": [
          {
            "variableName": "horizontalRadius",
            "displayName": "horizontal-radius",
            "description": "Horizontal radius in which to search for holes.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "32",
            "step": null
          },
          {
            "variableName": "verticalRadius",
            "displayName": "vertical-radius",
            "description": "Vertical radius in which to search for holes.",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "32",
            "step": null
          },
          {
            "variableName": "holeHeight",
            "displayName": "min-height",
            "description": "Minimum hole height required to be rendered.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "doubles",
            "displayName": "doubles",
            "description": "Highlights double holes that can be stood across.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreOwn",
            "displayName": "ignore-own",
            "description": "Ignores rendering the hole you are currently standing in.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "webs",
            "displayName": "webs",
            "description": "Whether to show holes that have webs inside of them.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "height",
            "displayName": "height",
            "description": "The height of rendering.",
            "defaultValue": "0.2",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Render",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "topQuad",
            "displayName": "top-quad",
            "description": "Whether to render a quad at the top of the hole.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bottomQuad",
            "displayName": "bottom-quad",
            "description": "Whether to render a quad at the bottom of the hole.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bedrockColorTop",
            "displayName": "bedrock-top",
            "description": "The top color for holes that are completely bedrock.",
            "defaultValue": "new SettingColor(100, 255, 0, 200",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bedrockColorBottom",
            "displayName": "bedrock-bottom",
            "description": "The bottom color for holes that are completely bedrock.",
            "defaultValue": "new SettingColor(100, 255, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "obsidianColorTop",
            "displayName": "obsidian-top",
            "description": "The top color for holes that are completely obsidian.",
            "defaultValue": "new SettingColor(255, 0, 0, 200",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "obsidianColorBottom",
            "displayName": "obsidian-bottom",
            "description": "The bottom color for holes that are completely obsidian.",
            "defaultValue": "new SettingColor(255, 0, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mixedColorTop",
            "displayName": "mixed-top",
            "description": "The top color for holes that have mixed bedrock and obsidian.",
            "defaultValue": "new SettingColor(255, 127, 0, 200",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mixedColorBottom",
            "displayName": "mixed-bottom",
            "description": "The bottom color for holes that have mixed bedrock and obsidian.",
            "defaultValue": "new SettingColor(255, 127, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ItemHighlight",
        "settings": [
          {
            "variableName": "color",
            "displayName": "color",
            "description": "The color to highlight the items with.",
            "defaultValue": "new SettingColor(225, 25, 255, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "ItemPhysics",
        "settings": [
          {
            "variableName": "randomRotation",
            "displayName": "random-rotation",
            "description": "Adds a random rotation to every item.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "LightOverlay",
        "settings": [
          {
            "variableName": "horizontalRange",
            "displayName": "horizontal-range",
            "description": "Horizontal range in blocks.",
            "defaultValue": "8",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "verticalRange",
            "displayName": "vertical-range",
            "description": "Vertical range in blocks.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "seeThroughBlocks",
            "displayName": "see-through-blocks",
            "description": "Allows you to see the lines through blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "newMobSpawnLightLevel",
            "displayName": "new-mob-spawn-light-level",
            "description": "Use the new (1.18+) mob spawn behavior",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "color",
            "displayName": "color",
            "description": "Color of places where mobs can currently spawn.",
            "defaultValue": "new SettingColor(225, 25, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "potentialColor",
            "displayName": "potential-color",
            "description": "Color of places where mobs can potentially spawn (eg at night).",
            "defaultValue": "new SettingColor(225, 225, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "LogoutSpots",
        "settings": [
          {
            "variableName": "scale",
            "displayName": "scale",
            "description": "The scale.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "fullHeight",
            "displayName": "full-height",
            "description": "Displays the height as the player's full height.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 0, 255, 55",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nameColor",
            "displayName": "name-color",
            "description": "The name color.",
            "defaultValue": "new SettingColor(255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nameBackgroundColor",
            "displayName": "name-background-color",
            "description": "The name background color.",
            "defaultValue": "new SettingColor(0, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Nametags",
        "settings": [
          {
            "variableName": "scale",
            "displayName": "scale",
            "description": "The scale of the nametag.",
            "defaultValue": "1.1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.1",
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreSelf",
            "displayName": "ignore-self",
            "description": "Ignore yourself when in third person or freecam.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreFriends",
            "displayName": "ignore-friends",
            "description": "Ignore rendering nametags for friends.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreBots",
            "displayName": "ignore-bots",
            "description": "Only render non-bot nametags.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "culling",
            "displayName": "culling",
            "description": "Only render a certain number of nametags at a certain distance.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxCullRange",
            "displayName": "culling-range",
            "description": "Only render nametags within this distance of your player.",
            "defaultValue": "20",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "200",
            "step": null
          },
          {
            "variableName": "maxCullCount",
            "displayName": "culling-count",
            "description": "Only render this many nametags.",
            "defaultValue": "50",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "displayHealth",
            "displayName": "health",
            "description": "Shows the player's health.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "displayGameMode",
            "displayName": "gamemode",
            "description": "Shows the player's GameMode.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "displayDistance",
            "displayName": "distance",
            "description": "Shows the distance between you and the player.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "displayPing",
            "displayName": "ping",
            "description": "Shows the player's ping.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "displayItems",
            "displayName": "items",
            "description": "Displays armor and hand items above the name tags.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "itemSpacing",
            "displayName": "item-spacing",
            "description": "The spacing between items.",
            "defaultValue": "2",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Players",
            "min": "0",
            "max": "10",
            "step": null
          },
          {
            "variableName": "ignoreEmpty",
            "displayName": "ignore-empty-slots",
            "description": "Doesn't add spacing where an empty item stack would be.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "itemDurability",
            "displayName": "durability",
            "description": "Displays item durability as either a total, percentage, or neither.",
            "defaultValue": "Durability.None",
            "type": "Durability",
            "builderType": "Enum",
            "options": [
              "None",
              "Total",
              "Percentage"
            ],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "displayEnchants",
            "displayName": "display-enchants",
            "description": "Displays item enchantments on the items.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enchantPos",
            "displayName": "enchantment-position",
            "description": "Where the enchantments are rendered.",
            "defaultValue": "Position.Above",
            "type": "Position",
            "builderType": "Enum",
            "options": [
              "Above",
              "OnTop"
            ],
            "groupName": "Players",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enchantLength",
            "displayName": "enchant-name-length",
            "description": "The length enchantment names are trimmed to.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Players",
            "min": "1",
            "max": "5",
            "step": null
          },
          {
            "variableName": "enchantTextScale",
            "displayName": "enchant-text-scale",
            "description": "The scale of the enchantment text.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Players",
            "min": "0.1",
            "max": "2",
            "step": null
          },
          {
            "variableName": "itemCount",
            "displayName": "show-count",
            "description": "Displays the number of items in the stack.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Items",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "background",
            "displayName": "background-color",
            "description": "The color of the nametag background.",
            "defaultValue": "new SettingColor(0, 0, 0, 75",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "nameColor",
            "displayName": "name-color",
            "description": "The color of the nametag names.",
            "defaultValue": "new SettingColor(",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pingColor",
            "displayName": "ping-color",
            "description": "The color of the nametag ping.",
            "defaultValue": "new SettingColor(20, 170, 170",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "gamemodeColor",
            "displayName": "gamemode-color",
            "description": "The color of the nametag gamemode.",
            "defaultValue": "new SettingColor(232, 185, 35",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "distanceColorMode",
            "displayName": "distance-color-mode",
            "description": "The mode to color the nametag distance with.",
            "defaultValue": "DistanceColorMode.Gradient",
            "type": "DistanceColorMode",
            "builderType": "Enum",
            "options": [
              "Gradient",
              "Flat"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "distanceColor",
            "displayName": "distance-color",
            "description": "The color of the nametag distance.",
            "defaultValue": "new SettingColor(150, 150, 150",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "NoRender",
        "settings": [
          {
            "variableName": "noPortalOverlay",
            "displayName": "portal-overlay",
            "description": "Disables rendering of the nether portal overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noSpyglassOverlay",
            "displayName": "spyglass-overlay",
            "description": "Disables rendering of the spyglass overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noNausea",
            "displayName": "nausea",
            "description": "Disables rendering of the nausea overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noPumpkinOverlay",
            "displayName": "pumpkin-overlay",
            "description": "Disables rendering of the pumpkin head overlay",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noPowderedSnowOverlay",
            "displayName": "powdered-snow-overlay",
            "description": "Disables rendering of the powdered snow overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noFireOverlay",
            "displayName": "fire-overlay",
            "description": "Disables rendering of the fire overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noLiquidOverlay",
            "displayName": "liquid-overlay",
            "description": "Disables rendering of the liquid overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noInWallOverlay",
            "displayName": "in-wall-overlay",
            "description": "Disables rendering of the overlay when inside blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noVignette",
            "displayName": "vignette",
            "description": "Disables rendering of the vignette overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noGuiBackground",
            "displayName": "gui-background",
            "description": "Disables rendering of the GUI background overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noTotemAnimation",
            "displayName": "totem-animation",
            "description": "Disables rendering of the totem animation when you pop a totem.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noEatParticles",
            "displayName": "eating-particles",
            "description": "Disables rendering of eating particles.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noEnchantGlint",
            "displayName": "enchantment-glint",
            "description": "Disables rending of the enchantment glint.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Overlay",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBossBar",
            "displayName": "boss-bar",
            "description": "Disable rendering of boss bars.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noScoreboard",
            "displayName": "scoreboard",
            "description": "Disable rendering of the scoreboard.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noCrosshair",
            "displayName": "crosshair",
            "description": "Disables rendering of the crosshair.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noTitle",
            "displayName": "title",
            "description": "Disables rendering of the title.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noHeldItemName",
            "displayName": "held-item-name",
            "description": "Disables rendering of the held item name.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noObfuscation",
            "displayName": "obfuscation",
            "description": "Disables obfuscation styling of characters.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noPotionIcons",
            "displayName": "potion-icons",
            "description": "Disables rendering of status effect icons.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noMessageSignatureIndicator",
            "displayName": "message-signature-indicator",
            "description": "Disables chat message signature indicator on the left of the message.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "HUD",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noWeather",
            "displayName": "weather",
            "description": "Disables rendering of weather.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBlindness",
            "displayName": "blindness",
            "description": "Disables rendering of blindness.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noDarkness",
            "displayName": "darkness",
            "description": "Disables rendering of darkness.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noFog",
            "displayName": "fog",
            "description": "Disables rendering of fog.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noEnchTableBook",
            "displayName": "enchantment-table-book",
            "description": "Disables rendering of books above enchanting tables.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noSignText",
            "displayName": "sign-text",
            "description": "Disables rendering of text on signs.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBlockBreakParticles",
            "displayName": "block-break-particles",
            "description": "Disables rendering of block-break particles.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBlockBreakOverlay",
            "displayName": "block-break-overlay",
            "description": "Disables rendering of block-break overlay.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noSkylightUpdates",
            "displayName": "skylight-updates",
            "description": "Disables rendering of skylight updates.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBeaconBeams",
            "displayName": "beacon-beams",
            "description": "Disables rendering of beacon beams.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noFallingBlocks",
            "displayName": "falling-blocks",
            "description": "Disables rendering of falling blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noCaveCulling",
            "displayName": "cave-culling",
            "description": "Disables Minecraft's cave culling algorithm.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noMapMarkers",
            "displayName": "map-markers",
            "description": "Disables markers on maps.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noMapContents",
            "displayName": "map-contents",
            "description": "Disable rendering of maps.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "bannerRender",
            "displayName": "banners",
            "description": "Changes rendering of banners.",
            "defaultValue": "BannerRenderMode.Everything",
            "type": "BannerRenderMode",
            "builderType": "Enum",
            "options": [
              "Everything",
              "Pillar",
              "None"
            ],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noFireworkExplosions",
            "displayName": "firework-explosions",
            "description": "Disables rendering of firework explosions.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noBarrierInvis",
            "displayName": "barrier-invisibility",
            "description": "Disables barriers being invisible when not holding one.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noTextureRotations",
            "displayName": "texture-rotations",
            "description": "Changes texture rotations and model offsets to use a constant value instead of the block position.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dropSpawnPacket",
            "displayName": "drop-spawn-packets",
            "description": "WARNING! Drops all spawn packets of entities selected in the above list.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noArmor",
            "displayName": "armor",
            "description": "Disables rendering of armor on entities.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noInvisibility",
            "displayName": "invisibility",
            "description": "Shows invisible entities.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noGlowing",
            "displayName": "glowing",
            "description": "Disables rendering of the glowing effect",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noMobInSpawner",
            "displayName": "spawner-entities",
            "description": "Disables rendering of spinning mobs inside of mob spawners",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noDeadEntities",
            "displayName": "dead-entities",
            "description": "Disables rendering of dead entities",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "noNametags",
            "displayName": "nametags",
            "description": "Disables rendering of entity nametags",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Entity",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "PopChams",
        "settings": [
          {
            "variableName": "onlyOne",
            "displayName": "only-one",
            "description": "Only allow one ghost per player.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderTime",
            "displayName": "render-time",
            "description": "How long the ghost is rendered in seconds.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.1",
            "max": "6",
            "step": null
          },
          {
            "variableName": "yModifier",
            "displayName": "y-modifier",
            "description": "How much should the Y position of the ghost change per second.",
            "defaultValue": "0.75",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "scaleModifier",
            "displayName": "scale-modifier",
            "description": "How much should the scale of the ghost change per second.",
            "defaultValue": "-0.25",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fadeOut",
            "displayName": "fade-out",
            "description": "Fades out the color.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 255, 255, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 255, 255, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "StorageESP",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Rendering mode.",
            "defaultValue": "Mode.Shader",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Box",
              "Shader"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tracers",
            "displayName": "tracers",
            "description": "Draws tracers to storage blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fillOpacity",
            "displayName": "fill-opacity",
            "description": "The opacity of the shape fill.",
            "defaultValue": "50",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "255",
            "step": null
          },
          {
            "variableName": "outlineWidth",
            "displayName": "width",
            "description": "The width of the shader outline.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "10",
            "step": null
          },
          {
            "variableName": "glowMultiplier",
            "displayName": "glow-multiplier",
            "description": "Multiplier for glow effect",
            "defaultValue": "3.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "10",
            "step": "0.001"
          },
          {
            "variableName": "chest",
            "displayName": "chest",
            "description": "The color of chests.",
            "defaultValue": "new SettingColor(255, 160, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "trappedChest",
            "displayName": "trapped-chest",
            "description": "The color of trapped chests.",
            "defaultValue": "new SettingColor(255, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "barrel",
            "displayName": "barrel",
            "description": "The color of barrels.",
            "defaultValue": "new SettingColor(255, 160, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shulker",
            "displayName": "shulker",
            "description": "The color of Shulker Boxes.",
            "defaultValue": "new SettingColor(255, 160, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enderChest",
            "displayName": "ender-chest",
            "description": "The color of Ender Chests.",
            "defaultValue": "new SettingColor(120, 0, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "other",
            "displayName": "other",
            "description": "The color of furnaces, dispenders, droppers and hoppers.",
            "defaultValue": "new SettingColor(140, 140, 140, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "fadeDistance",
            "displayName": "fade-distance",
            "description": "The distance at which the color will fade.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "12",
            "step": null
          },
          {
            "variableName": "hideOpened",
            "displayName": "hide-opened",
            "description": "Hides opened containers.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Opened Rendering",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "openedColor",
            "displayName": "opened-color",
            "description": "Optional setting to change colors of opened chests, as opposed to not rendering. Disabled at zero opacity.",
            "defaultValue": "new SettingColor(203, 90, 203, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Opened Rendering",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "TimeChanger",
        "settings": [
          {
            "variableName": "time",
            "displayName": "time",
            "description": "The specified time to be set.",
            "defaultValue": "0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Tracers",
        "settings": [
          {
            "variableName": "ignoreSelf",
            "displayName": "ignore-self",
            "description": "Doesn't draw tracers to yourself when in third person or freecam.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreFriends",
            "displayName": "ignore-friends",
            "description": "Doesn't draw tracers to friends.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "showInvis",
            "displayName": "show-invisible",
            "description": "Shows invisible entities.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "style",
            "displayName": "style",
            "description": "What display mode should be used",
            "defaultValue": "TracerStyle.Lines",
            "type": "TracerStyle",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Offscreen"
            ],
            "groupName": "Appearance",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "target",
            "displayName": "target",
            "description": "What part of the entity to target.",
            "defaultValue": "Target.Body",
            "type": "Target",
            "builderType": "Enum",
            "options": [
              "Head",
              "Body",
              "Feet"
            ],
            "groupName": "Appearance",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stem",
            "displayName": "stem",
            "description": "Draw a line through the center of the tracer target.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Appearance",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxDist",
            "displayName": "max-distance",
            "description": "Maximum distance for tracers to show.",
            "defaultValue": "256",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Appearance",
            "min": "0",
            "max": "256",
            "step": null
          },
          {
            "variableName": "distanceOffscreen",
            "displayName": "distance-offscreen",
            "description": "Offscreen's distance from center.",
            "defaultValue": "200",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Appearance",
            "min": "0",
            "max": "500",
            "step": null
          },
          {
            "variableName": "sizeOffscreen",
            "displayName": "size-offscreen",
            "description": "Offscreen's size.",
            "defaultValue": "10",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Appearance",
            "min": "2",
            "max": "50",
            "step": null
          },
          {
            "variableName": "blinkOffscreen",
            "displayName": "blink-offscreen",
            "description": "Make offscreen Blink.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Appearance",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "blinkOffscreenSpeed",
            "displayName": "blink-offscreen-speed",
            "description": "Offscreen's blink speed.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Appearance",
            "min": "1",
            "max": "15",
            "step": null
          },
          {
            "variableName": "distance",
            "displayName": "distance-colors",
            "description": "Changes the color of tracers depending on distance.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "friendOverride",
            "displayName": "show-friend-colors",
            "description": "Whether or not to override the distance color of friends with the friend color.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "playersColor",
            "displayName": "players-colors",
            "description": "The player's color.",
            "defaultValue": "new SettingColor(205, 205, 205, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "animalsColor",
            "displayName": "animals-color",
            "description": "The animal's color.",
            "defaultValue": "new SettingColor(145, 255, 145, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "waterAnimalsColor",
            "displayName": "water-animals-color",
            "description": "The water animal's color.",
            "defaultValue": "new SettingColor(145, 145, 255, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "monstersColor",
            "displayName": "monsters-color",
            "description": "The monster's color.",
            "defaultValue": "new SettingColor(255, 145, 145, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ambientColor",
            "displayName": "ambient-color",
            "description": "The ambient color.",
            "defaultValue": "new SettingColor(75, 75, 75, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "miscColor",
            "displayName": "misc-color",
            "description": "The misc color.",
            "defaultValue": "new SettingColor(145, 145, 145, 127",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Colors",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Trail",
        "settings": [
          {
            "variableName": "pause",
            "displayName": "pause-when-stationary",
            "description": "Whether or not to add particles when you are not moving.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Trajectories",
        "settings": [
          {
            "variableName": "otherPlayers",
            "displayName": "other-players",
            "description": "Calculates trajectories for other players.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "firedProjectiles",
            "displayName": "fired-projectiles",
            "description": "Calculates trajectories for already fired projectiles.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "accurate",
            "displayName": "accurate",
            "description": "Whether or not to calculate more accurate.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "simulationSteps",
            "displayName": "simulation-steps",
            "description": "How many steps to simulate projectiles. Zero for no limit",
            "defaultValue": "500",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "5000",
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 150, 0, 35",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 150, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPositionBox",
            "displayName": "render-position-boxes",
            "description": "Renders the actual position the projectile will be at each tick along it's trajectory.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "positionBoxSize",
            "displayName": "position-box-size",
            "description": "The size of the box drawn at the simulated positions.",
            "defaultValue": "0.02",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "positionSideColor",
            "displayName": "position-side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 150, 0, 35",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "positionLineColor",
            "displayName": "position-line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 150, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "TunnelESP",
        "settings": [
          {
            "variableName": "height",
            "displayName": "height",
            "description": "Height of the rendered box.",
            "defaultValue": "0.1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": "2",
            "step": null
          },
          {
            "variableName": "connected",
            "displayName": "connected",
            "description": "If neighbouring holes should be connected.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 175, 25, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 175, 25, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "UnfocusedCPU",
        "settings": [
          {
            "variableName": "fps",
            "displayName": "target-fps",
            "description": "Target FPS to set as the limit when the window is not focused.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "sgGeneral",
            "min": "1",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "VoidESP",
        "settings": [
          {
            "variableName": "airOnly",
            "displayName": "air-only",
            "description": "Checks bedrock only for air blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "horizontalRadius",
            "displayName": "horizontal-radius",
            "description": "Horizontal radius in which to search for holes.",
            "defaultValue": "64",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "256",
            "step": null
          },
          {
            "variableName": "holeHeight",
            "displayName": "hole-height",
            "description": "The minimum hole height to be rendered.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "netherRoof",
            "displayName": "nether-roof",
            "description": "Check for holes in nether roof.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "fill-color",
            "description": "The color that fills holes in the void.",
            "defaultValue": "new SettingColor(225, 25, 25, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color to draw lines of holes to the void.",
            "defaultValue": "new SettingColor(225, 25, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "WallHack",
        "settings": [
          {
            "variableName": "opacity",
            "displayName": "opacity",
            "description": "The opacity for rendered blocks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "255",
            "step": null
          },
          {
            "variableName": "occludeChunks",
            "displayName": "occlude-chunks",
            "description": "Whether caves should occlude underground (may look wonky when on).",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "WaypointsModule",
        "settings": [
          {
            "variableName": "textRenderDistance",
            "displayName": "text-render-distance",
            "description": "Maximum distance from the center of the screen at which text will be rendered.",
            "defaultValue": "100",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "200",
            "step": null
          },
          {
            "variableName": "waypointFadeDistance",
            "displayName": "waypoint-fade-distance",
            "description": "The distance to a waypoint at which it begins to start fading.",
            "defaultValue": "20",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "maxDeathPositions",
            "displayName": "max-death-positions",
            "description": "The amount of death positions to save, 0 to disable",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Death Position",
            "min": "0",
            "max": "20",
            "step": null
          },
          {
            "variableName": "dpChat",
            "displayName": "chat",
            "description": "Send a chat message with your position once you die",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Death Position",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Xray",
        "settings": [
          {
            "variableName": "opacity",
            "displayName": "opacity",
            "description": "The opacity for all other blocks.",
            "defaultValue": "25",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "255",
            "step": null
          },
          {
            "variableName": "exposedOnly",
            "displayName": "exposed-only",
            "description": "Show only exposed ores.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Zoom",
        "settings": [
          {
            "variableName": "zoom",
            "displayName": "zoom",
            "description": "How much to zoom.",
            "defaultValue": "6",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "scrollSensitivity",
            "displayName": "scroll-sensitivity",
            "description": "Allows you to change zoom value using scroll wheel. 0 to disable.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "smooth",
            "displayName": "smooth",
            "description": "Smooth transition.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "cinematic",
            "displayName": "cinematic",
            "description": "Enables cinematic camera.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderHands",
            "displayName": "show-hands",
            "description": "Whether or not to render your hands.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  },
  {
    "name": "world",
    "modules": [
      {
        "name": "AirPlace",
        "settings": [
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders a block overlay where the obsidian will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customRange",
            "displayName": "custom-range",
            "description": "Use custom range for air place.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Range",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "Custom range to place at.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Range",
            "min": "0",
            "max": "6",
            "step": null
          }
        ]
      },
      {
        "name": "Ambience",
        "settings": [
          {
            "variableName": "endSky",
            "displayName": "end-sky",
            "description": "Makes the sky like the end.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customSkyColor",
            "displayName": "custom-sky-color",
            "description": "Whether the sky color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "overworldSkyColor",
            "displayName": "overworld-sky-color",
            "description": "The color of the overworld sky.",
            "defaultValue": "new SettingColor(0, 125, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "netherSkyColor",
            "displayName": "nether-sky-color",
            "description": "The color of the nether sky.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "endSkyColor",
            "displayName": "end-sky-color",
            "description": "The color of the end sky.",
            "defaultValue": "new SettingColor(65, 30, 90",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customCloudColor",
            "displayName": "custom-cloud-color",
            "description": "Whether the clouds color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "cloudColor",
            "displayName": "cloud-color",
            "description": "The color of the clouds.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "changeLightningColor",
            "displayName": "custom-lightning-color",
            "description": "Whether the lightning color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lightningColor",
            "displayName": "lightning-color",
            "description": "The color of the lightning.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Sky",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customGrassColor",
            "displayName": "custom-grass-color",
            "description": "Whether the grass color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "grassColor",
            "displayName": "grass-color",
            "description": "The color of the grass.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customFoliageColor",
            "displayName": "custom-foliage-color",
            "description": "Whether the foliage color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "foliageColor",
            "displayName": "foliage-color",
            "description": "The color of the foliage.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customWaterColor",
            "displayName": "custom-water-color",
            "description": "Whether the water color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "waterColor",
            "displayName": "water-color",
            "description": "The color of the water.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "customLavaColor",
            "displayName": "custom-lava-color",
            "description": "Whether the lava color should be changed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lavaColor",
            "displayName": "lava-color",
            "description": "The color of the lava.",
            "defaultValue": "new SettingColor(102, 0, 0",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "World",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoBreed",
        "settings": [
          {
            "variableName": "range",
            "displayName": "range",
            "description": "How far away the animals can be to be bred.",
            "defaultValue": "4.5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "hand",
            "displayName": "hand-for-breeding",
            "description": "The hand to use for breeding.",
            "defaultValue": "Hand.MAIN_HAND",
            "type": "Hand",
            "builderType": "Enum",
            "options": [
              "MainHand",
              "OffHand"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mobAgeFilter",
            "displayName": "mob-age-filter",
            "description": "Determines the age of the mobs to target (baby, adult, or both).",
            "defaultValue": "EntityAge.Adult",
            "type": "EntityAge",
            "builderType": "Enum",
            "options": [
              "Baby",
              "Adult",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoBrewer",
        "settings": [
          {
            "variableName": "potion",
            "displayName": "potion",
            "description": "The type of potion to brew.",
            "defaultValue": "MyPotion.Strength",
            "type": "MyPotion",
            "builderType": "Unknown",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoMount",
        "settings": [
          {
            "variableName": "checkSaddle",
            "displayName": "check-saddle",
            "description": "Checks if the entity contains a saddle before mounting.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Faces the entity you mount.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoNametag",
        "settings": [
          {
            "variableName": "range",
            "displayName": "range",
            "description": "The maximum range an entity can be to be nametagged.",
            "defaultValue": "5",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "6",
            "step": null
          },
          {
            "variableName": "priority",
            "displayName": "priority",
            "description": "Priority sort",
            "defaultValue": "SortPriority.LowestDistance",
            "type": "SortPriority",
            "builderType": "Enum",
            "options": [
              "LowestDistance",
              "HighestDistance",
              "LowestHealth",
              "HighestHealth",
              "ClosestAngle"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renametag",
            "displayName": "renametag",
            "description": "Allows already nametagged entities to be renamed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically faces towards the mob being nametagged.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoShearer",
        "settings": [
          {
            "variableName": "distance",
            "displayName": "distance",
            "description": "The maximum distance the sheep have to be to be sheared.",
            "defaultValue": "5.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Prevents shears from being broken.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically faces towards the animal being sheared.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "AutoSign",
        "settings": []
      },
      {
        "name": "AutoSmelter",
        "settings": [
          {
            "variableName": "disableWhenOutOfItems",
            "displayName": "disable-when-out-of-items",
            "description": "Disable the module when you run out of items",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "BuildHeight",
        "settings": []
      },
      {
        "name": "Collisions",
        "settings": [
          {
            "variableName": "magma",
            "displayName": "magma",
            "description": "Prevents you from walking over magma blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "unloadedChunks",
            "displayName": "unloaded-chunks",
            "description": "Stops you from going into unloaded chunks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreBorder",
            "displayName": "ignore-border",
            "description": "Removes world border collision.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EChestFarmer",
        "settings": [
          {
            "variableName": "selfToggle",
            "displayName": "self-toggle",
            "description": "Disables when you reach the desired amount of obsidian.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "ignoreExisting",
            "displayName": "ignore-existing",
            "description": "Ignores existing obsidian in your inventory and mines the total target amount.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "amount",
            "displayName": "amount",
            "description": "The amount of obsidian to farm.",
            "defaultValue": "64",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "8",
            "max": "512",
            "step": null
          },
          {
            "variableName": "swingHand",
            "displayName": "swing-hand",
            "description": "Swing hand client-side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Renders a block overlay where the obsidian will be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "EndermanLook",
        "settings": [
          {
            "variableName": "lookMode",
            "displayName": "look-mode",
            "description": "How this module behaves.",
            "defaultValue": "Mode.Away",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "At",
              "Away"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "stun",
            "displayName": "stun-hostiles",
            "description": "Automatically stares at hostile endermen to stun them in place.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Excavator",
        "settings": [
          {
            "variableName": "selectionBind",
            "displayName": "selection-bind",
            "description": "Bind to draw selection.",
            "defaultValue": "Keybind.fromButton(GLFW.GLFW_MOUSE_BUTTON_RIGHT",
            "type": "Keybind",
            "builderType": "Keybind",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "logSelection",
            "displayName": "log-selection",
            "description": "Logs the selection coordinates to the chat.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "keepActive",
            "displayName": "keep-active",
            "description": "Keep the module active after finishing the excavation.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Rendering",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color.",
            "defaultValue": "new SettingColor(255, 255, 255, 50",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Rendering",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color.",
            "defaultValue": "new SettingColor(255, 255, 255, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Rendering",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Flamethrower",
        "settings": [
          {
            "variableName": "distance",
            "displayName": "distance",
            "description": "The maximum distance the animal has to be to be roasted.",
            "defaultValue": "5.0",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.0",
            "max": null,
            "step": null
          },
          {
            "variableName": "antiBreak",
            "displayName": "anti-break",
            "description": "Prevents flint and steel from being broken.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "putOutFire",
            "displayName": "put-out-fire",
            "description": "Tries to put out the fire when animal is low health, so the items don't burn.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "targetBabies",
            "displayName": "target-babies",
            "description": "If checked babies will also be killed.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "tickInterval",
            "displayName": "tick-interval",
            "description": "",
            "defaultValue": "5",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically faces towards the animal roasted.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "HighwayBuilder",
        "settings": [
          {
            "variableName": "width",
            "displayName": "width",
            "description": "Width of the highway.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "5",
            "step": null
          },
          {
            "variableName": "height",
            "displayName": "height",
            "description": "Height of the highway.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "2",
            "max": "5",
            "step": null
          },
          {
            "variableName": "floor",
            "displayName": "floor",
            "description": "What floor placement mode to use.",
            "defaultValue": "Floor.Replace",
            "type": "Floor",
            "builderType": "Enum",
            "options": [
              "Replace",
              "PlaceMissing"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "railings",
            "displayName": "railings",
            "description": "Builds railings next to the highway.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mineAboveRailings",
            "displayName": "mine-above-railings",
            "description": "Mines blocks above railings.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotation",
            "displayName": "rotation",
            "description": "Mode of rotation.",
            "defaultValue": "Rotation.Both",
            "type": "Rotation",
            "builderType": "Enum",
            "options": [
              "None",
              "Mine",
              "Place",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "disconnectOnToggle",
            "displayName": "disconnect-on-toggle",
            "description": "Automatically disconnects when the module is turned off, for example for not having enough blocks.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "pauseOnLag",
            "displayName": "pause-on-lag",
            "description": "Pauses the current process while the server stops responding.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "dontBreakTools",
            "displayName": "dont-break-tools",
            "description": "Don't break tools.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Digging",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "savePickaxes",
            "displayName": "save-pickaxes",
            "description": "How many pickaxes to ensure are saved.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Digging",
            "min": "0",
            "max": "36",
            "step": null
          },
          {
            "variableName": "breakDelay",
            "displayName": "break-delay",
            "description": "The delay between breaking blocks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Digging",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "blocksPerTick",
            "displayName": "blocks-per-tick",
            "description": "The maximum amount of blocks that can be mined in a tick. Only applies to blocks instantly breakable.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Digging",
            "min": "1",
            "max": "100",
            "step": null
          },
          {
            "variableName": "placeDelay",
            "displayName": "place-delay",
            "description": "The delay between placing blocks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Paving",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "placementsPerTick",
            "displayName": "placements-per-tick",
            "description": "The maximum amount of blocks that can be placed in a tick.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Paving",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "mineEnderChests",
            "displayName": "mine-ender-chests",
            "description": "Mines ender chests for obsidian.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Inventory",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "saveEchests",
            "displayName": "save-ender-chests",
            "description": "How many ender chests to ensure are saved.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Inventory",
            "min": "0",
            "max": "64",
            "step": null
          },
          {
            "variableName": "rebreakEchests",
            "displayName": "instantly-rebreak-echests",
            "description": "Whether or not to use the instant rebreak exploit to break echests.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Inventory",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rebreakTimer",
            "displayName": "rebreak-delay",
            "description": "Delay between rebreak attempts.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Inventory",
            "min": null,
            "max": "20",
            "step": null
          },
          {
            "variableName": "renderMine",
            "displayName": "render-blocks-to-mine",
            "description": "Render blocks to be mined.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render Digging",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderMineShape",
            "displayName": "blocks-to-mine-shape-mode",
            "description": "How the blocks to be mined are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render Digging",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderMineSideColor",
            "displayName": "blocks-to-mine-side-color",
            "description": "Color of blocks to be mined.",
            "defaultValue": "new SettingColor(225, 25, 25, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render Digging",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderMineLineColor",
            "displayName": "blocks-to-mine-line-color",
            "description": "Color of blocks to be mined.",
            "defaultValue": "new SettingColor(225, 25, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render Digging",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlace",
            "displayName": "render-blocks-to-place",
            "description": "Render blocks to be placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render Paving",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlaceShape",
            "displayName": "blocks-to-place-shape-mode",
            "description": "How the blocks to be placed are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render Paving",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlaceSideColor",
            "displayName": "blocks-to-place-side-color",
            "description": "Color of blocks to be placed.",
            "defaultValue": "new SettingColor(25, 25, 225, 25",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render Paving",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "renderPlaceLineColor",
            "displayName": "blocks-to-place-line-color",
            "description": "Color of blocks to be placed.",
            "defaultValue": "new SettingColor(25, 25, 225",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render Paving",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "InfinityMiner",
        "settings": [
          {
            "variableName": "startRepairing",
            "displayName": "repair-threshold",
            "description": "The durability percentage at which to start repairing.",
            "defaultValue": "20",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "99",
            "step": null
          },
          {
            "variableName": "startMining",
            "displayName": "mine-threshold",
            "description": "The durability percentage at which to start mining.",
            "defaultValue": "70",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": "99",
            "step": null
          },
          {
            "variableName": "walkHome",
            "displayName": "walk-home",
            "description": "Will walk 'home' when your inventory is full.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "When Full",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "logOut",
            "displayName": "log-out",
            "description": "Logs out when your inventory is full. Will walk home FIRST if walk home is enabled.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "When Full",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "LiquidFiller",
        "settings": [
          {
            "variableName": "placeInLiquids",
            "displayName": "place-in",
            "description": "What type of liquids to place in.",
            "defaultValue": "PlaceIn.Both",
            "type": "PlaceIn",
            "builderType": "Enum",
            "options": [
              "Both",
              "Water",
              "Lava"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shape",
            "displayName": "shape",
            "description": "The shape of placing algorithm.",
            "defaultValue": "Shape.Sphere",
            "type": "Shape",
            "builderType": "Enum",
            "options": [
              "Sphere",
              "UniformCube"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "The place range.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay between actions in ticks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "maxBlocksPerTick",
            "displayName": "max-blocks-per-tick",
            "description": "Maximum blocks to try to place per tick.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "sortMode",
            "displayName": "sort-mode",
            "description": "The blocks you want to place first.",
            "defaultValue": "SortMode.Closest",
            "type": "SortMode",
            "builderType": "Enum",
            "options": [
              "None",
              "Closest",
              "Furthest",
              "TopDown",
              "BottomUp"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Automatically rotates towards the space targeted for filling.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "listMode",
            "displayName": "list-mode",
            "description": "Selection mode.",
            "defaultValue": "ListMode.Whitelist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Whitelist",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "MountBypass",
        "settings": []
      },
      {
        "name": "NoGhostBlocks",
        "settings": [
          {
            "variableName": "breaking",
            "displayName": "breaking",
            "description": "Whether to apply for block breaking actions.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "placing",
            "displayName": "placing",
            "description": "Whether to apply for block placement actions.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Nuker",
        "settings": [
          {
            "variableName": "shape",
            "displayName": "shape",
            "description": "The shape of nuking algorithm.",
            "defaultValue": "Shape.Sphere",
            "type": "Shape",
            "builderType": "Enum",
            "options": [
              "Cube",
              "UniformCube",
              "Sphere"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "The way the blocks are broken.",
            "defaultValue": "Nuker.Mode.Flatten",
            "type": "Nuker.Mode",
            "builderType": "Enum",
            "options": [
              "All",
              "Flatten",
              "Smash"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "range",
            "displayName": "range",
            "description": "The break range.",
            "defaultValue": "4",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_up",
            "displayName": "up",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_down",
            "displayName": "down",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_left",
            "displayName": "left",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_right",
            "displayName": "right",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_forward",
            "displayName": "forward",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "range_back",
            "displayName": "back",
            "description": "The break range.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay in ticks between breaking blocks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "maxBlocksPerTick",
            "displayName": "max-blocks-per-tick",
            "description": "Maximum blocks to try to break per tick. Useful when insta mining.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "sortMode",
            "displayName": "sort-mode",
            "description": "The blocks you want to mine first.",
            "defaultValue": "Nuker.SortMode.Closest",
            "type": "Nuker.SortMode",
            "builderType": "Enum",
            "options": [
              "None",
              "Closest",
              "Furthest",
              "TopDown"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingHand",
            "displayName": "swing-hand",
            "description": "Swing hand client side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "packetMine",
            "displayName": "packet-mine",
            "description": "Attempt to instamine everything at once.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates server-side to the block being mined.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "listMode",
            "displayName": "list-mode",
            "description": "Selection mode.",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Whitelist",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enableRenderBounding",
            "displayName": "bounding-box",
            "description": "Enable rendering bounding box for Cube and Uniform Cube.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeModeBox",
            "displayName": "nuke-box-mode",
            "description": "How the shape for the bounding box is rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColorBox",
            "displayName": "side-color",
            "description": "The side color of the bounding box.",
            "defaultValue": "new SettingColor(16,106,144, 100",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColorBox",
            "displayName": "line-color",
            "description": "The line color of the bounding box.",
            "defaultValue": "new SettingColor(16,106,144, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "enableRenderBreaking",
            "displayName": "broken-blocks",
            "description": "Enable rendering bounding box for Cube and Uniform Cube.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeModeBreak",
            "displayName": "nuke-block-mode",
            "description": "How the shapes for broken blocks are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The side color of the target block rendering.",
            "defaultValue": "new SettingColor(255, 0, 0, 80",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The line color of the target block rendering.",
            "defaultValue": "new SettingColor(255, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "PacketMine",
        "settings": [
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay between mining blocks in ticks.",
            "defaultValue": "1",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Sends rotation packets to the server when mining.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "autoSwitch",
            "displayName": "auto-switch",
            "description": "Automatically switches to the best tool when the block is ready to be mined instantly.",
            "defaultValue": "false",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "notOnUse",
            "displayName": "not-on-use",
            "description": "Won't auto switch if you're using an item.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Whether or not to render the block being mined.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "readySideColor",
            "displayName": "ready-side-color",
            "description": "The color of the sides of the blocks that can be broken.",
            "defaultValue": "new SettingColor(0, 204, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "readyLineColor",
            "displayName": "ready-line-color",
            "description": "The color of the lines of the blocks that can be broken.",
            "defaultValue": "new SettingColor(0, 204, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "SpawnProofer",
        "settings": [
          {
            "variableName": "range",
            "displayName": "range",
            "description": "Range for block placement and rendering",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay in ticks between placing blocks",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Rotates towards the blocks being placed.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Which spawn types should be spawn proofed.",
            "defaultValue": "Mode.Both",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Always",
              "Potential",
              "Both",
              "None"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "newMobSpawnLightLevel",
            "displayName": "new-mob-spawn-light-level",
            "description": "Use the new (1.18+) mob spawn behavior",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "StashFinder",
        "settings": [
          {
            "variableName": "minimumStorageCount",
            "displayName": "minimum-storage-count",
            "description": "The minimum amount of storage blocks in a chunk to record the chunk.",
            "defaultValue": "4",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "minimumDistance",
            "displayName": "minimum-distance",
            "description": "The minimum distance you must be from spawn to record a certain chunk.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": "10000",
            "step": null
          },
          {
            "variableName": "sendNotifications",
            "displayName": "notifications",
            "description": "Sends Minecraft notifications when new stashes are found.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "notificationMode",
            "displayName": "notification-mode",
            "description": "The mode to use for notifications.",
            "defaultValue": "Mode.Both",
            "type": "Mode",
            "builderType": "Enum",
            "options": [
              "Chat",
              "Toast",
              "Both"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "Timer",
        "settings": [
          {
            "variableName": "multiplier",
            "displayName": "multiplier",
            "description": "The timer multiplier amount.",
            "defaultValue": "1",
            "type": "Double",
            "builderType": "Double",
            "options": [],
            "groupName": "Default",
            "min": "0.1",
            "max": null,
            "step": null
          }
        ]
      },
      {
        "name": "VeinMiner",
        "settings": [
          {
            "variableName": "mode",
            "displayName": "mode",
            "description": "Selection mode.",
            "defaultValue": "ListMode.Blacklist",
            "type": "ListMode",
            "builderType": "Enum",
            "options": [
              "Whitelist",
              "Blacklist"
            ],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "depth",
            "displayName": "depth",
            "description": "Amount of iterations used to scan for similar blocks.",
            "defaultValue": "3",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "1",
            "max": null,
            "step": null
          },
          {
            "variableName": "delay",
            "displayName": "delay",
            "description": "Delay between mining blocks.",
            "defaultValue": "0",
            "type": "Integer",
            "builderType": "Integer",
            "options": [],
            "groupName": "Default",
            "min": "0",
            "max": null,
            "step": null
          },
          {
            "variableName": "rotate",
            "displayName": "rotate",
            "description": "Sends rotation packets to the server when mining.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Default",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "swingHand",
            "displayName": "swing-hand",
            "description": "Swing hand client-side.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "render",
            "displayName": "render",
            "description": "Whether or not to render the block being mined.",
            "defaultValue": "true",
            "type": "Boolean",
            "builderType": "Boolean",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "shapeMode",
            "displayName": "shape-mode",
            "description": "How the shapes are rendered.",
            "defaultValue": "ShapeMode.Both",
            "type": "ShapeMode",
            "builderType": "Enum",
            "options": [
              "Lines",
              "Sides",
              "Both"
            ],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "sideColor",
            "displayName": "side-color",
            "description": "The color of the sides of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 10",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          },
          {
            "variableName": "lineColor",
            "displayName": "line-color",
            "description": "The color of the lines of the blocks being rendered.",
            "defaultValue": "new SettingColor(204, 0, 0, 255",
            "type": "SettingColor",
            "builderType": "Color",
            "options": [],
            "groupName": "Render",
            "min": null,
            "max": null,
            "step": null
          }
        ]
      }
    ]
  }
]